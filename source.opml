<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Tue, 15 Nov 2022 15:04:48 GMT -->
<opml version="2.0">
	<head>
		<title>nodeEditor: reallySimpleActivityPub</title>
		<dateCreated>Sun, 06 Nov 2022 15:48:13 GMT</dateCreated>
		<dateModified>Tue, 15 Nov 2022 15:04:48 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 2, 3, 13</expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>110</windowTop>
		<windowLeft>724</windowLeft>
		<windowBottom>582</windowBottom>
		<windowRight>1644</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/reallysimpleactivitypub/">
			<outline text="readme.md" created="Sun, 06 Nov 2022 15:48:39 GMT">
				<outline text="# Really Simple ActivityPub. ">
					<outline text="I keep puzzling over this idea."/>
					<outline text="If I had an outline of its basic features we could start there. I'm pretty good at factoring APIs. "/>
					<outline text="Want to help? I'm up for it. " created="Sun, 06 Nov 2022 15:49:31 GMT"/>
					<outline text="Please don't send me a link to a hot mess of bullshit. I need it in 1. 2. 3. format. "/>
					<outline text="You can post any thoughts you have about getting this started in &lt;a href=&quot;https://github.com/scripting/reallySimpleActivityPub/issues/1&quot;&gt;this thread&lt;/a&gt;. " created="Sun, 06 Nov 2022 15:49:38 GMT"/>
					</outline>
				</outline>
			<outline text="scriptingglue/styles.css" created="Mon, 06 Jun 2022 15:20:26 GMT">
				<outline text="body {">
					<outline text="font-family: Ubuntu;"/>
					<outline text="font-size: 18px;"/>
					<outline text="background-color: whitesmoke;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divPageBody {">
					<outline text="width: 60%;"/>
					<outline text="margin-top: 60px;"/>
					<outline text="margin-left: auto;"/>
					<outline text="margin-right: auto;"/>
					<outline text="}"/>
					</outline>
				<outline text="li {" created="Mon, 10 Oct 2022 16:05:16 GMT">
					<outline text="margin-bottom: 10px;" created="Tue, 15 Nov 2022 14:47:00 GMT"/>
					<outline text="}" created="Tue, 15 Nov 2022 14:47:05 GMT"/>
					</outline>
				<outline text="" created="Mon, 10 Oct 2022 16:05:16 GMT"/>
				</outline>
			<outline text="scriptingglue/code.js" created="Mon, 06 Jun 2022 15:20:22 GMT">
				<outline text="const appConsts = {" created="Tue, 15 Nov 2022 14:33:40 GMT">
					<outline text="urlMastodonServer: &quot;http://social.scottfr.ee/&quot;" created="Tue, 15 Nov 2022 14:33:51 GMT"/>
					<outline text="};" created="Tue, 15 Nov 2022 14:33:46 GMT"/>
					</outline>
				<outline text="" created="Fri, 07 Oct 2022 23:16:40 GMT"/>
				<outline text="function httpRequest (url, timeout, headers, callback) {">
					<outline text="Changes" isComment="true">
						<outline text="7/22/22; 12:30:36 PM by DW" created="Fri, 22 Jul 2022 16:30:36 GMT">
							<outline text="If there's no message, say there was a communication error. We have to say something. ;-)" created="Fri, 22 Jul 2022 16:30:37 GMT"/>
							</outline>
						<outline text="9/18/21; 10:47:11 AM by DW" created="Sat, 18 Sep 2021 14:47:10 GMT">
							<outline text="When there's an error, usually there is a status.responseText to parse as JSON, but sometimes it fails. Now we account for that. " created="Sat, 18 Sep 2021 14:47:11 GMT"/>
							</outline>
						<outline text="7/20/20; 5:36:14 PM by DW">
							<outline text="Finally, I need a HTTP request routine that calls back in a standard way.">
								<outline text="function (err, data)"/>
								</outline>
							<outline text="No, I don't want to use promises."/>
							<outline text="for info about timeous see this page." isComment="true">
								<outline text="http://stackoverflow.com/questions/3543683/determine-if-ajax-error-is-a-timeout"/>
								</outline>
							</outline>
						</outline>
					<outline text="timeout = (timeout === undefined) ? 30000 : timeout;"/>
					<outline text="var jxhr = $.ajax ({ ">
						<outline text="url: url,"/>
						<outline text="dataType: &quot;text&quot;, "/>
						<outline text="headers," created="Tue, 14 May 2013 14:35:06 GMT" pgfnum="23850"/>
						<outline text="timeout"/>
						<outline text="}) "/>
						</outline>
					<outline text=".success (function (data, status) { ">
						<outline text="callback (undefined, data);"/>
						<outline text="}) "/>
						</outline>
					<outline text=".error (function (status) { ">
						<outline text="var message;" created="Sat, 18 Sep 2021 14:45:42 GMT"/>
						<outline text="try { //9/18/21 by DW" created="Sat, 18 Sep 2021 14:45:52 GMT">
							<outline text="message = JSON.parse (status.responseText).message;" created="Sat, 18 Sep 2021 14:46:09 GMT"/>
							<outline text="}" created="Sat, 18 Sep 2021 14:45:55 GMT"/>
							</outline>
						<outline text="catch (err) {" created="Sat, 18 Sep 2021 14:45:57 GMT">
							<outline text="message = status.responseText;" created="Sat, 18 Sep 2021 14:46:25 GMT"/>
							<outline text="}" created="Sat, 18 Sep 2021 14:46:00 GMT"/>
							</outline>
						<outline text="if ((message === undefined) || (message.length == 0)) { //7/22/22 by DW &amp; 8/31/22 by DW" created="Fri, 22 Jul 2022 16:29:46 GMT">
							<outline text="message = &quot;There was an error communicating with the server.&quot;;" created="Fri, 22 Jul 2022 16:30:07 GMT"/>
							<outline text="}" created="Fri, 22 Jul 2022 16:29:57 GMT"/>
							</outline>
						<outline text="var err = {">
							<outline text="code: status.status,"/>
							<outline text="message"/>
							<outline text="};"/>
							</outline>
						<outline text="callback (err);"/>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function buildParamList (paramtable, flPrivate) { //8/4/21 by DW" created="Sat, 09 Aug 2014 15:39:08 GMT" pgfnum="43181">
					<outline text="Changes" isComment="true" created="Wed, 04 Aug 2021 14:47:01 GMT">
						<outline text="8/4/21; 10:47:04 AM by DW" created="Wed, 04 Aug 2021 14:47:03 GMT">
							<outline text="Copied twBuildParamList. If an element of params is undefined, don't include it. We were encoding it as a string, &quot;undefined&quot; and all of a sudden on the other side, in davetwitter, it was calling it an error. It is pretty errorish, but why it started now, that's a mystery." created="Wed, 04 Aug 2021 14:47:04 GMT"/>
							</outline>
						</outline>
					<outline text="var s = &quot;&quot;;" created="Sat, 09 Aug 2014 15:39:47 GMT" pgfnum="43188"/>
					<outline text="if (flPrivate) {" created="Sat, 09 Aug 2014 20:17:16 GMT" pgfnum="43185">
						<outline text="paramtable.flprivate = &quot;true&quot;;" created="Sat, 09 Aug 2014 15:43:48 GMT" pgfnum="43208"/>
						<outline text="}" created="Sat, 09 Aug 2014 20:17:19 GMT" pgfnum="43186"/>
						</outline>
					<outline text="for (var x in paramtable) {" created="Sat, 09 Aug 2014 15:39:38 GMT" pgfnum="43186">
						<outline text="if (paramtable [x] !== undefined) { //8/4/21 by DW" created="Wed, 04 Aug 2021 14:48:52 GMT">
							<outline text="if (s.length &gt; 0) {" created="Sat, 09 Aug 2014 15:40:02 GMT" pgfnum="43189">
								<outline text="s += &quot;&amp;&quot;;" created="Sat, 09 Aug 2014 15:40:08 GMT" pgfnum="43190"/>
								<outline text="}" created="Sat, 09 Aug 2014 15:40:14 GMT" pgfnum="43191"/>
								</outline>
							<outline text="s += x + &quot;=&quot; + encodeURIComponent (paramtable [x]);" created="Sat, 09 Aug 2014 15:40:19 GMT" pgfnum="43192"/>
							<outline text="}" created="Wed, 04 Aug 2021 14:49:01 GMT"/>
							</outline>
						<outline text="}" created="Sat, 09 Aug 2014 15:39:43 GMT" pgfnum="43187"/>
						</outline>
					<outline text="return (s);" created="Sat, 09 Aug 2014 15:40:54 GMT" pgfnum="43193"/>
					<outline text="}" created="Sat, 09 Aug 2014 15:39:35 GMT" pgfnum="43185"/>
					</outline>
				<outline text="function servercall (path, params, flAuthenticated, callback, urlServer=appConsts.urlMastodonServer) {">
					<outline text="Changes" isComment="true">
						<outline text="12/10/21; 12:51:58 PM by DW" created="Fri, 10 Dec 2021 17:51:57 GMT">
							<outline text="New optional parameter, urlServer, so this function can be used to call Daytona." created="Fri, 10 Dec 2021 17:51:58 GMT"/>
							</outline>
						<outline text="1/11/21; 12:51:47 PM by DW">
							<outline text="New param, flAuthenticated. If true we add the oAuth info to the call. "/>
							</outline>
						</outline>
					<outline text="var whenstart = new Date ();"/>
					<outline text="if (params === undefined) {">
						<outline text="params = new Object ();"/>
						<outline text="}"/>
						</outline>
					<outline text="if (flAuthenticated) { //1/11/21 by DW">
						<outline text="params.oauth_token = localStorage.twOauthToken;"/>
						<outline text="params.oauth_token_secret = localStorage.twOauthTokenSecret;"/>
						<outline text="}"/>
						</outline>
					<outline text="var url = urlServer + path + &quot;?&quot; + buildParamList (params, false);" created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215"/>
					<outline text="httpRequest (url, undefined, undefined, function (err, jsontext) {">
						<outline text="if (err) {">
							<outline text="console.log (&quot;servercall: url == &quot; + url + &quot;, err.message == &quot; + err.message);"/>
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="console.log (&quot;servercall: jsontext.length == &quot; + jsontext.length + &quot;, secs == &quot; + secondsSince (whenstart)); " isComment="true"/>
							<outline text="callback (undefined, JSON.parse (jsontext));"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function serverpost (path, params, flAuthenticated, filedata, callback, urlServer=appConsts.urlMastodonServer) {">
					<outline text="Changes" isComment="true">
						<outline text="8/2/21; 2:19:56 PM by DW" created="Mon, 02 Aug 2021 18:19:55 GMT">
							<outline text="If filedata is not a PlainObject or a string, convert it to a string." created="Mon, 02 Aug 2021 18:19:58 GMT"/>
							</outline>
						<outline text="2/25/21; 1:01:58 PM by DW">
							<outline text="A special form of servercall for posts."/>
							</outline>
						</outline>
					<outline text="var whenstart = new Date ();"/>
					<outline text="if (!$.isPlainObject (filedata) &amp;&amp; (typeof (filedata) != &quot;string&quot;)) { //8/2/21 by DW" created="Mon, 02 Aug 2021 18:36:54 GMT">
						<outline text="filedata = filedata.toString ();" created="Mon, 02 Aug 2021 18:38:49 GMT"/>
						<outline text="}" created="Mon, 02 Aug 2021 18:38:43 GMT"/>
						</outline>
					<outline text="if (params === undefined) {">
						<outline text="params = new Object ();"/>
						<outline text="}"/>
						</outline>
					<outline text="if (flAuthenticated) { //1/11/21 by DW">
						<outline text="params.oauth_token = localStorage.twOauthToken;"/>
						<outline text="params.oauth_token_secret = localStorage.twOauthTokenSecret;"/>
						<outline text="}"/>
						</outline>
					<outline text="var url = urlServer + path + &quot;?&quot; + buildParamList (params, false);" created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215"/>
					<outline text="$.post (url, filedata, function (data, status) {" created="Sat, 09 Aug 2014 15:59:33 GMT" pgfnum="43210">
						<outline text="if (status == &quot;success&quot;) {" created="Sat, 09 Aug 2014 16:04:22 GMT" pgfnum="43217">
							<outline text="console.log (&quot;serverpost: url == &quot; + url + &quot;, secs == &quot; + secondsSince (whenstart)); " isComment="true"/>
							<outline text="if (callback !== undefined) {" created="Mon, 29 Mar 2021 17:13:51 GMT">
								<outline text="callback (undefined, data);" created="Sat, 09 Aug 2014 16:04:47 GMT" pgfnum="43222"/>
								<outline text="}" created="Mon, 29 Mar 2021 17:13:56 GMT"/>
								</outline>
							<outline text="}" created="Sat, 09 Aug 2014 16:04:38 GMT" pgfnum="43219"/>
							</outline>
						<outline text="else {" created="Sat, 09 Aug 2014 16:04:39 GMT" pgfnum="43220">
							<outline text="var err = {">
								<outline text="code: status.status,"/>
								<outline text="message: JSON.parse (status.responseText).message"/>
								<outline text="};"/>
								</outline>
							<outline text="if (callback !== undefined) {" created="Mon, 29 Mar 2021 17:13:51 GMT">
								<outline text="callback (err);"/>
								<outline text="}" created="Mon, 29 Mar 2021 17:13:56 GMT"/>
								</outline>
							<outline text="}" created="Sat, 09 Aug 2014 16:04:41 GMT" pgfnum="43221"/>
							</outline>
						<outline text="});" created="Sat, 09 Aug 2014 16:00:26 GMT" pgfnum="43214"/>
						</outline>
					<outline text="httpRequest (url, undefined, undefined, function (err, jsontext) {" isComment="true">
						<outline text="if (err) {">
							<outline text="console.log (&quot;servercall: url == &quot; + url + &quot;, err.message == &quot; + err.message);"/>
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="console.log (&quot;servercall: url == &quot; + url + &quot;, secs == &quot; + secondsSince (whenstart)); "/>
							<outline text="callback (undefined, JSON.parse (jsontext));"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="" created="Tue, 15 Nov 2022 14:35:18 GMT"/>
				<outline text="function getServerInfo (callback) {" created="Tue, 15 Nov 2022 14:35:18 GMT">
					<outline text="servercall (&quot;api/v1/instance&quot;, undefined, undefined, callback);" created="Tue, 15 Nov 2022 14:35:35 GMT"/>
					<outline text="}" created="Tue, 15 Nov 2022 14:35:29 GMT"/>
					</outline>
				<outline text="function testGetServerInfo () {" created="Tue, 15 Nov 2022 14:36:41 GMT">
					<outline text="getServerInfo (function (err, theServerInfo) {" created="Tue, 15 Nov 2022 14:36:53 GMT">
						<outline text="if (err) {" created="Tue, 15 Nov 2022 14:37:06 GMT">
							<outline text="console.log (err.message);" created="Tue, 15 Nov 2022 14:37:17 GMT"/>
							<outline text="}" created="Tue, 15 Nov 2022 14:37:26 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 15 Nov 2022 14:37:27 GMT">
							<outline text="console.log (jsonStringify (theServerInfo));" created="Tue, 15 Nov 2022 14:37:17 GMT"/>
							<outline text="}" created="Tue, 15 Nov 2022 14:37:32 GMT"/>
							</outline>
						<outline text="})" created="Tue, 15 Nov 2022 14:37:03 GMT"/>
						</outline>
					<outline text="}" created="Tue, 15 Nov 2022 14:36:49 GMT"/>
					</outline>
				<outline text="" created="Tue, 15 Nov 2022 14:33:26 GMT"/>
				<outline text="function startup () {" created="Mon, 06 Jun 2022 15:20:24 GMT">
					<outline text="console.log (&quot;startup&quot;);" created="Mon, 06 Jun 2022 15:21:52 GMT"/>
					<outline text="}" created="Mon, 06 Jun 2022 15:21:50 GMT"/>
					</outline>
				</outline>
			<outline text="scriptingglue/index.html" created="Thu, 07 Apr 2022 16:25:39 GMT">
				<outline text="&lt;html&gt;">
					<outline text="&lt;head&gt;">
						<outline text="&lt;title&gt;Mastodon API tester&lt;/title&gt;"/>
						<outline text="&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;"/>
						<outline text="&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;"/>
						<outline text="&lt;%basicIncludes2%&gt;"/>
						<outline text="&lt;script src=&quot;http://scripting.com/code/concord/testing/3.0.6/concord.js&quot;&gt;&lt;/script&gt;" isComment="true"/>
						<outline text="&lt;link rel=&quot;stylesheet&quot; href=&quot;http://scripting.com/code/concord/testing/3.0.6/concordstyles.css&quot;/&gt;" isComment="true"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/shared/outliner.js&quot;&gt;&lt;/script&gt;" isComment="true" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/shared/xml.js&quot;&gt;&lt;/script&gt;" isComment="true" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/keypress.js&quot; /&gt;&lt;/script&gt;" isComment="true"/>
						<outline text="&lt;script src=&quot;http://scripting.com/code/nodestorage/api.js&quot;&gt;&lt;/script&gt;" isComment="true" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="&lt;script src=&quot;code.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;link href=&quot;styles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;"/>
						<outline text="&lt;/head&gt;"/>
						</outline>
					<outline text="&lt;body&gt;">
						<outline text="&lt;div class=&quot;divPageBody&quot;&gt;">
							<outline text="&lt;h1&gt;Mastodon API tester&lt;/h1&gt;" created="Tue, 15 Nov 2022 14:43:00 GMT"/>
							<outline text="&lt;p&gt;Let's build glue for scripting Mastodon!&lt;/p&gt;" created="Tue, 15 Nov 2022 14:43:13 GMT"/>
							<outline text="&lt;p&gt;I've started by implementing a single verb, based on an example Scott Hanson provided. &lt;/p&gt;" created="Tue, 15 Nov 2022 14:43:36 GMT"/>
							<outline text="&lt;blockquote&gt;&lt;b&gt;mastodon.getServerInfo&lt;/b&gt;&lt;/blockquote&gt;" created="Tue, 15 Nov 2022 14:43:57 GMT"/>
							<outline text="&lt;p&gt;How to test:&lt;/p&gt;" created="Tue, 15 Nov 2022 14:43:57 GMT"/>
							<outline text="&lt;ol&gt;" created="Tue, 15 Nov 2022 14:44:18 GMT">
								<outline text="&lt;li&gt;Open the JavaScript console.&lt;/li&gt;" created="Tue, 15 Nov 2022 14:44:29 GMT"/>
								<outline text="&lt;li&gt;Type testGetServerInfo () and press Return.&lt;/li&gt;" created="Tue, 15 Nov 2022 14:44:29 GMT"/>
								<outline text="&lt;li&gt;The JavaScript object that is returned is displayed in the console.&lt;/li&gt;" created="Tue, 15 Nov 2022 14:44:29 GMT"/>
								<outline text="&lt;/ol&gt;" created="Tue, 15 Nov 2022 14:44:24 GMT"/>
								</outline>
							<outline text="&lt;/div&gt;"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="$(document).ready (function () {">
								<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
								<outline text="});"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/body&gt;"/>
						</outline>
					<outline text="&lt;/html&gt;"/>
					</outline>
				</outline>
			<outline text="scriptingglue/readme.md" created="Tue, 15 Nov 2022 14:54:28 GMT">
				<outline text="# Scripting glue" created="Tue, 15 Nov 2022 14:54:33 GMT">
					<outline text="Let's build glue for scripting Mastodon from JavaScript!" created="Tue, 15 Nov 2022 14:43:13 GMT"/>
					<outline text="11/15/22 by DW" created="Tue, 15 Nov 2022 14:55:00 GMT"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Sun, 06 Nov 2022 15:51:46 GMT">
			<outline text="nodeEditorSuite.utilities.buildIReallySimpleActivityPub ()" created="Sun, 06 Nov 2022 15:51:50 GMT"/>
			</outline>
		</body>
	</opml>
