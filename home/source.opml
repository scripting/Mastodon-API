<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Sun, 27 Nov 2022 13:03:11 GMT -->
<opml version="2.0">
	<head>
		<title>nodeEditor: mastoHome</title>
		<dateCreated>Sun, 20 Nov 2022 14:49:38 GMT</dateCreated>
		<dateModified>Sun, 27 Nov 2022 13:03:11 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 8</expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>81</windowTop>
		<windowLeft>201</windowLeft>
		<windowBottom>994</windowBottom>
		<windowRight>1756</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/mastohome/">
			<outline text="worknotes.md" created="Wed, 23 Nov 2022 13:28:53 GMT">
				<outline text="#### 11/24/22; 11:59:16 AM by DW" created="Thu, 24 Nov 2022 16:59:15 GMT">
					<outline text="mastodonMemory.clientKey = &quot;7K684bEj1t2motTsyD-iZQLG69h73EJdpeiuA4vH4ZM&quot;; saveMastodonMemory (); //post it at radio3" isComment="true" created="Wed, 23 Nov 2022 21:41:28 GMT"/>
					</outline>
				<outline text="#### 11/23/22 by DW" created="Wed, 23 Nov 2022 13:28:57 GMT">
					<outline text="make these items configurable by moving them into mastodonMemory" created="Wed, 23 Nov 2022 13:28:59 GMT">
						<outline text="urlMastodonServer: &quot;http://social.scottfr.ee/&quot;," created="Tue, 15 Nov 2022 14:33:51 GMT"/>
						<outline text="urlMastoLandServer: &quot;http://dave.masto.land/&quot;, //it's running mastoserver.js" created="Sun, 20 Nov 2022 18:49:35 GMT"/>
						<outline text="clientKey: &quot;1Z-8Zf2vOuGnmXY8w8YPwjAtSGuKwmSNxGqy_b2IEk8&quot;" created="Fri, 18 Nov 2022 20:19:28 GMT"/>
						</outline>
					<outline text="for now the user can set them manually, but there must be a settings dialog in the app" created="Wed, 23 Nov 2022 13:30:53 GMT"/>
					<outline text="clientKey has to be passed to the server from the client, right now it's storing it on the server, it must be stored in the client" created="Wed, 23 Nov 2022 13:35:23 GMT">
						<outline text="" created="Wed, 23 Nov 2022 13:52:20 GMT"/>
						</outline>
					</outline>
				</outline>
			<outline text="styles.css" created="Mon, 06 Jun 2022 15:20:26 GMT">
				<outline text="body {">
					<outline text="font-family: Ubuntu;"/>
					<outline text="font-size: 18px;"/>
					<outline text="background-color: whitesmoke;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divPageBody {">
					<outline text="width: 60%;"/>
					<outline text="margin-top: 60px;"/>
					<outline text="margin-left: auto;"/>
					<outline text="margin-right: auto;"/>
					<outline text="margin-bottom: 400px;"/>
					<outline text="}"/>
					</outline>
				<outline text="li {" created="Mon, 10 Oct 2022 16:05:16 GMT">
					<outline text="margin-bottom: 10px;" created="Tue, 15 Nov 2022 14:47:00 GMT"/>
					<outline text="font-size: 16px;" created="Tue, 15 Nov 2022 16:13:35 GMT"/>
					<outline text="}" created="Tue, 15 Nov 2022 14:47:05 GMT"/>
					</outline>
				<outline text="h4 {" created="Tue, 15 Nov 2022 16:11:56 GMT">
					<outline text="margin-top: 20px;" created="Tue, 15 Nov 2022 16:11:58 GMT"/>
					<outline text="}" created="Tue, 15 Nov 2022 16:12:04 GMT"/>
					</outline>
				<outline text="" created="Mon, 10 Oct 2022 16:05:16 GMT"/>
				</outline>
			<outline text="api.js" created="Tue, 22 Nov 2022 21:52:49 GMT">
				<outline text="const myServerUrl = &quot;http://localhost:1401/&quot;; " created="Fri, 25 Nov 2022 23:17:51 GMT"/>
				<outline text="const myServerUrl = &quot;http://dave.masto.land/&quot;; " isComment="true" created="Fri, 25 Nov 2022 23:17:51 GMT"/>
				<outline text="" created="Sat, 26 Nov 2022 20:08:00 GMT"/>
				<outline text="const myClientKey = &quot;2l26ogBP5utGp-VAf0J66r23KDn5aCRTjC0m9MoHdfQ&quot;; //radio3 on " created="Sat, 26 Nov 2022 20:08:00 GMT"/>
				<outline text="" created="Fri, 25 Nov 2022 23:18:03 GMT"/>
				<outline text="const appFacts = {" isComment="true" created="Fri, 25 Nov 2022 14:29:51 GMT">
					<outline text="client_name: &quot;Radio 3&quot;," created="Fri, 25 Nov 2022 14:27:12 GMT"/>
					<outline text="redirect_uris: &quot;http://radio3.io/&quot;," created="Fri, 25 Nov 2022 14:27:12 GMT"/>
					<outline text="scope: &quot;write&quot;," created="Fri, 25 Nov 2022 14:27:43 GMT"/>
					<outline text="website: &quot;http://radio3.io/&quot;" created="Fri, 25 Nov 2022 14:27:36 GMT"/>
					<outline text="}" created="Fri, 25 Nov 2022 14:29:53 GMT"/>
					</outline>
				<outline text="" created="Fri, 25 Nov 2022 22:44:37 GMT"/>
				<outline text="var mastodonMemory = {" created="Sat, 19 Nov 2022 12:58:50 GMT">
					<outline text="urlMastoLandServer: myServerUrl, " created="Sun, 20 Nov 2022 18:49:35 GMT"/>
					<outline text="urlMastoLandServer: &quot;http://dave.masto.land/&quot;, " isComment="true" created="Sun, 20 Nov 2022 18:49:35 GMT"/>
					<outline text="" created="Thu, 24 Nov 2022 16:59:45 GMT"/>
					<outline text="clientKey: myClientKey, " created="Fri, 18 Nov 2022 20:19:28 GMT"/>
					<outline text="" created="Wed, 23 Nov 2022 13:30:24 GMT"/>
					<outline text="access_token: undefined," created="Sun, 20 Nov 2022 00:57:03 GMT"/>
					<outline text="created_at: undefined," created="Sun, 20 Nov 2022 00:57:03 GMT"/>
					<outline text="scope: undefined," created="Sun, 20 Nov 2022 00:57:03 GMT"/>
					<outline text="token_type: undefined," created="Sun, 20 Nov 2022 00:57:03 GMT"/>
					<outline text="" created="Thu, 24 Nov 2022 16:59:53 GMT"/>
					<outline text="lastTootString: &quot;&quot;" created="Sun, 20 Nov 2022 01:05:39 GMT"/>
					<outline text="}" created="Sat, 19 Nov 2022 12:59:03 GMT"/>
					</outline>
				<outline text="function saveMastodonMemory () {" created="Sat, 19 Nov 2022 12:59:08 GMT">
					<outline text="localStorage.mastodonMemory = jsonStringify (mastodonMemory);" created="Sat, 19 Nov 2022 12:59:18 GMT"/>
					<outline text="console.log (&quot;saveMastodonMemory: localStorage.mastodonMemory == &quot; + jsonStringify (localStorage.mastodonMemory));" isComment="true" created="Sat, 19 Nov 2022 13:03:55 GMT"/>
					<outline text="}" created="Sat, 19 Nov 2022 12:59:18 GMT"/>
					</outline>
				<outline text="function restoreMastodonMemory () {" created="Sat, 19 Nov 2022 12:59:08 GMT">
					<outline text="if (localStorage.mastodonMemory !== undefined) {" created="Sat, 19 Nov 2022 13:01:04 GMT">
						<outline text="var jstruct;" created="Sat, 19 Nov 2022 13:01:04 GMT"/>
						<outline text="try {" created="Sat, 19 Nov 2022 13:00:46 GMT">
							<outline text="jstruct = JSON.parse (localStorage.mastodonMemory);" created="Sat, 19 Nov 2022 12:59:18 GMT"/>
							<outline text="for (var x in jstruct) {" created="Sat, 19 Nov 2022 13:03:06 GMT">
								<outline text="mastodonMemory [x] = jstruct [x];" created="Sat, 19 Nov 2022 13:03:20 GMT"/>
								<outline text="}" created="Sat, 19 Nov 2022 13:03:10 GMT"/>
								</outline>
							<outline text="}" created="Sat, 19 Nov 2022 13:00:50 GMT"/>
							</outline>
						<outline text="catch (err) {" created="Sat, 19 Nov 2022 13:00:50 GMT">
							<outline text="console.log (&quot;restoreMastodonMemory: err.message == &quot; + err.message);" created="Sat, 19 Nov 2022 13:01:45 GMT"/>
							<outline text="}" created="Sat, 19 Nov 2022 13:00:54 GMT"/>
							</outline>
						<outline text="}" created="Sat, 19 Nov 2022 13:01:12 GMT"/>
						</outline>
					<outline text="console.log (&quot;restoreMastodonMemory: mastodonMemory == &quot; + jsonStringify (mastodonMemory));" created="Sat, 19 Nov 2022 13:03:55 GMT"/>
					<outline text="}" created="Sat, 19 Nov 2022 12:59:18 GMT"/>
					</outline>
				<outline text="" created="Sat, 26 Nov 2022 20:05:31 GMT"/>
				<outline text="function initMastodonMemory () {" created="Sat, 26 Nov 2022 20:05:31 GMT">
					<outline text="for (var x in mastodonMemory) {" created="Sun, 20 Nov 2022 01:00:56 GMT">
						<outline text="mastodonMemory [x] = undefined;" created="Sun, 20 Nov 2022 01:01:16 GMT"/>
						<outline text="}" created="Sun, 20 Nov 2022 01:01:11 GMT"/>
						</outline>
					<outline text="mastodonMemory.urlMastoLandServer = myServerUrl;" created="Sat, 26 Nov 2022 20:05:40 GMT"/>
					<outline text="mastodonMemory.clientKey = myClientKey;" created="Sat, 26 Nov 2022 20:05:40 GMT"/>
					<outline text="}" created="Sat, 26 Nov 2022 20:05:39 GMT"/>
					</outline>
				<outline text="" created="Sat, 26 Nov 2022 20:05:31 GMT"/>
				<outline text="" created="Sat, 26 Nov 2022 20:05:31 GMT"/>
				<outline text="" created="Tue, 22 Nov 2022 21:52:51 GMT"/>
				<outline text="function getAllUrlParams () { //9/7/22 by DW" created="Wed, 07 Sep 2022 15:34:27 GMT">
					<outline text="var s = location.search;" created="Thu, 26 May 2022 15:27:38 GMT"/>
					<outline text="var allparams = new Object ();" created="Wed, 07 Sep 2022 15:35:38 GMT"/>
					<outline text="if (beginsWith (s, &quot;?&quot;)) {" created="Thu, 26 May 2022 15:31:16 GMT">
						<outline text="s = stringDelete (s, 1, 1);" created="Thu, 26 May 2022 15:31:28 GMT"/>
						<outline text="}" created="Thu, 26 May 2022 15:31:24 GMT"/>
						</outline>
					<outline text="var splits = s.split (&quot;&amp;&quot;);" created="Wed, 07 Sep 2022 15:35:05 GMT"/>
					<outline text="splits.forEach (function (item) {" created="Wed, 07 Sep 2022 15:35:24 GMT">
						<outline text="var splits = item.split (&quot;=&quot;);" created="Wed, 07 Sep 2022 15:36:01 GMT"/>
						<outline text="allparams [splits [0]] = splits [1];" created="Wed, 07 Sep 2022 15:36:18 GMT"/>
						<outline text="});" created="Wed, 07 Sep 2022 15:35:31 GMT"/>
						</outline>
					<outline text="return (allparams);" created="Wed, 07 Sep 2022 15:35:05 GMT"/>
					<outline text="}" created="Wed, 07 Sep 2022 15:34:39 GMT"/>
					</outline>
				<outline text="function getFirstUrlParam (paramval) {//5/26/22 by DW" created="Thu, 26 May 2022 15:26:35 GMT">
					<outline text="var s = location.search;" created="Thu, 26 May 2022 15:27:38 GMT"/>
					<outline text="if (beginsWith (s, &quot;?&quot;)) {" created="Thu, 26 May 2022 15:31:16 GMT">
						<outline text="s = stringDelete (s, 1, 1);" created="Thu, 26 May 2022 15:31:28 GMT"/>
						<outline text="}" created="Thu, 26 May 2022 15:31:24 GMT"/>
						</outline>
					<outline text="var param1 = stringNthField (s, &quot;&amp;&quot;, 1);" created="Thu, 26 May 2022 15:28:39 GMT"/>
					<outline text="if (param1.length == 0) {" created="Thu, 26 May 2022 15:27:39 GMT">
						<outline text="return (&quot;&quot;);" created="Thu, 26 May 2022 15:32:21 GMT"/>
						<outline text="}" created="Thu, 26 May 2022 15:32:20 GMT"/>
						</outline>
					<outline text="paramval.val = decodeURIComponent (stringNthField (param1, &quot;=&quot;, 2));" created="Thu, 26 May 2022 15:37:18 GMT"/>
					<outline text="return (stringNthField (param1, &quot;=&quot;, 1));" created="Thu, 26 May 2022 15:32:28 GMT"/>
					<outline text="}" created="Thu, 26 May 2022 15:26:44 GMT"/>
					</outline>
				<outline text="function httpRequest (url, timeout, headers, callback) {">
					<outline text="Changes" isComment="true">
						<outline text="7/22/22; 12:30:36 PM by DW" created="Fri, 22 Jul 2022 16:30:36 GMT">
							<outline text="If there's no message, say there was a communication error. We have to say something. ;-)" created="Fri, 22 Jul 2022 16:30:37 GMT"/>
							</outline>
						<outline text="9/18/21; 10:47:11 AM by DW" created="Sat, 18 Sep 2021 14:47:10 GMT">
							<outline text="When there's an error, usually there is a status.responseText to parse as JSON, but sometimes it fails. Now we account for that. " created="Sat, 18 Sep 2021 14:47:11 GMT"/>
							</outline>
						<outline text="7/20/20; 5:36:14 PM by DW">
							<outline text="Finally, I need a HTTP request routine that calls back in a standard way.">
								<outline text="function (err, data)"/>
								</outline>
							<outline text="No, I don't want to use promises."/>
							<outline text="for info about timeous see this page." isComment="true">
								<outline text="http://stackoverflow.com/questions/3543683/determine-if-ajax-error-is-a-timeout"/>
								</outline>
							</outline>
						</outline>
					<outline text="timeout = (timeout === undefined) ? 30000 : timeout;"/>
					<outline text="var jxhr = $.ajax ({ ">
						<outline text="url: url,"/>
						<outline text="method: &quot;GET&quot;," created="Sat, 26 Nov 2022 16:38:42 GMT"/>
						<outline text="dataType: &quot;text&quot;, "/>
						<outline text="headers," created="Tue, 14 May 2013 14:35:06 GMT" pgfnum="23850"/>
						<outline text="timeout"/>
						<outline text="}) "/>
						</outline>
					<outline text=".success (function (data, status) { ">
						<outline text="callback (undefined, data);"/>
						<outline text="}) "/>
						</outline>
					<outline text=".error (function (status) { ">
						<outline text="var message;" created="Sat, 18 Sep 2021 14:45:42 GMT"/>
						<outline text="try { //9/18/21 by DW" created="Sat, 18 Sep 2021 14:45:52 GMT">
							<outline text="message = JSON.parse (status.responseText).message;" created="Sat, 18 Sep 2021 14:46:09 GMT"/>
							<outline text="}" created="Sat, 18 Sep 2021 14:45:55 GMT"/>
							</outline>
						<outline text="catch (err) {" created="Sat, 18 Sep 2021 14:45:57 GMT">
							<outline text="message = status.responseText;" created="Sat, 18 Sep 2021 14:46:25 GMT"/>
							<outline text="}" created="Sat, 18 Sep 2021 14:46:00 GMT"/>
							</outline>
						<outline text="if ((message === undefined) || (message.length == 0)) { //7/22/22 by DW &amp; 8/31/22 by DW" created="Fri, 22 Jul 2022 16:29:46 GMT">
							<outline text="message = &quot;There was an error communicating with the server.&quot;;" created="Fri, 22 Jul 2022 16:30:07 GMT"/>
							<outline text="}" created="Fri, 22 Jul 2022 16:29:57 GMT"/>
							</outline>
						<outline text="var err = {">
							<outline text="code: status.status,"/>
							<outline text="message"/>
							<outline text="};"/>
							</outline>
						<outline text="callback (err);"/>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function buildParamList (paramtable, flPrivate) { //8/4/21 by DW" created="Sat, 09 Aug 2014 15:39:08 GMT" pgfnum="43181">
					<outline text="Changes" isComment="true" created="Wed, 04 Aug 2021 14:47:01 GMT">
						<outline text="8/4/21; 10:47:04 AM by DW" created="Wed, 04 Aug 2021 14:47:03 GMT">
							<outline text="Copied twBuildParamList. If an element of params is undefined, don't include it. We were encoding it as a string, &quot;undefined&quot; and all of a sudden on the other side, in davetwitter, it was calling it an error. It is pretty errorish, but why it started now, that's a mystery." created="Wed, 04 Aug 2021 14:47:04 GMT"/>
							</outline>
						</outline>
					<outline text="var s = &quot;&quot;;" created="Sat, 09 Aug 2014 15:39:47 GMT" pgfnum="43188"/>
					<outline text="if (flPrivate) {" created="Sat, 09 Aug 2014 20:17:16 GMT" pgfnum="43185">
						<outline text="paramtable.flprivate = &quot;true&quot;;" created="Sat, 09 Aug 2014 15:43:48 GMT" pgfnum="43208"/>
						<outline text="}" created="Sat, 09 Aug 2014 20:17:19 GMT" pgfnum="43186"/>
						</outline>
					<outline text="for (var x in paramtable) {" created="Sat, 09 Aug 2014 15:39:38 GMT" pgfnum="43186">
						<outline text="if (paramtable [x] !== undefined) { //8/4/21 by DW" created="Wed, 04 Aug 2021 14:48:52 GMT">
							<outline text="if (s.length &gt; 0) {" created="Sat, 09 Aug 2014 15:40:02 GMT" pgfnum="43189">
								<outline text="s += &quot;&amp;&quot;;" created="Sat, 09 Aug 2014 15:40:08 GMT" pgfnum="43190"/>
								<outline text="}" created="Sat, 09 Aug 2014 15:40:14 GMT" pgfnum="43191"/>
								</outline>
							<outline text="s += x + &quot;=&quot; + encodeURIComponent (paramtable [x]);" created="Sat, 09 Aug 2014 15:40:19 GMT" pgfnum="43192"/>
							<outline text="}" created="Wed, 04 Aug 2021 14:49:01 GMT"/>
							</outline>
						<outline text="}" created="Sat, 09 Aug 2014 15:39:43 GMT" pgfnum="43187"/>
						</outline>
					<outline text="return (s);" created="Sat, 09 Aug 2014 15:40:54 GMT" pgfnum="43193"/>
					<outline text="}" created="Sat, 09 Aug 2014 15:39:35 GMT" pgfnum="43185"/>
					</outline>
				<outline text="" created="Mon, 21 Nov 2022 14:35:10 GMT"/>
				<outline text="function userLogin (clientKey) {" created="Fri, 18 Nov 2022 20:07:20 GMT">
					<outline text="Changes" isComment="true" created="Fri, 18 Nov 2022 20:07:30 GMT">
						<outline text="11/25/22; 5:42:41 PM by DW" created="Fri, 25 Nov 2022 22:42:40 GMT">
							<outline text="/connect now takes different parameters, so we can connect to any mastodon server through a single masto.land server" created="Fri, 25 Nov 2022 22:42:41 GMT">
								<outline text="appName" created="Fri, 25 Nov 2022 22:43:49 GMT"/>
								<outline text="serverIUrl" created="Fri, 25 Nov 2022 22:43:59 GMT"/>
								</outline>
							</outline>
						<outline text="11/18/22; 3:07:34 PM by DW" created="Fri, 18 Nov 2022 20:07:33 GMT">
							<outline text="" created="Fri, 18 Nov 2022 20:28:47 GMT"/>
							<outline text="http://scripting.com/code/reallysimpleactivitypub/scriptingglue/?code=dbnvvzlNa4D6svZ5rbQvqA1rUgv2iFCNum6CBtVdL9Q" created="Fri, 18 Nov 2022 20:28:48 GMT"/>
							<outline text="" created="Fri, 18 Nov 2022 20:28:48 GMT"/>
							<outline text="" created="Fri, 18 Nov 2022 20:28:48 GMT"/>
							<outline text="https://mastodon.example/oauth/authorize"/>
							<outline text="?client_id=CLIENT_ID"/>
							<outline text="&amp;scope=read+write+follow+push"/>
							<outline text="&amp;redirect_uri=urn:ietf:wg:oauth:2.0:oob"/>
							<outline text="&amp;response_type=code"/>
							</outline>
						</outline>
					<outline text="const urlThisPage = trimTrailing (window.location.href, &quot;#&quot;);" created="Sun, 20 Nov 2022 18:53:52 GMT"/>
					<outline text="const urlRedirectTo = mastodonMemory.urlMastoLandServer + &quot;connect?redirect_url=&quot; + urlThisPage + &quot;&amp;client_key=&quot; + clientKey;" created="Mon, 28 Apr 2014 12:43:45 GMT" pgfnum="40579"/>
					<outline text="window.location.href = urlRedirectTo;" created="Mon, 28 Apr 2014 12:43:28 GMT" pgfnum="40575"/>
					<outline text="const params = {" isComment="true" created="Fri, 25 Nov 2022 23:13:40 GMT">
						<outline text="server_url: myServerUrl," created="Fri, 25 Nov 2022 23:18:38 GMT"/>
						<outline text="client_name: appFacts.client_name," created="Fri, 25 Nov 2022 14:27:12 GMT"/>
						<outline text="redirect_uris: appFacts.redirect_uris," created="Fri, 25 Nov 2022 14:27:12 GMT"/>
						<outline text="website: appFacts.website" created="Fri, 25 Nov 2022 14:27:43 GMT"/>
						<outline text="};" created="Fri, 25 Nov 2022 23:13:52 GMT"/>
						</outline>
					<outline text="const paramlist = buildParamList (params) + &quot;&amp;scope=&quot; + appFacts.scope;" isComment="true" created="Fri, 25 Nov 2022 23:15:04 GMT"/>
					<outline text="const urlRedirectTo = mastodonMemory.urlMastoLandServer + &quot;connect?&quot; + paramlist;" isComment="true" created="Mon, 28 Apr 2014 12:43:45 GMT" pgfnum="40579"/>
					<outline text="window.location.href = urlRedirectTo;" isComment="true" created="Mon, 28 Apr 2014 12:43:28 GMT" pgfnum="40575"/>
					<outline text="}" created="Fri, 18 Nov 2022 20:07:29 GMT"/>
					</outline>
				<outline text="function getAccessToken (codeFromMasto, callback) {" created="Sun, 20 Nov 2022 00:42:37 GMT">
					<outline text="var urlServer = mastodonMemory.urlMastoLandServer + &quot;getaccesstoken?code=&quot; + codeFromMasto + &quot;&amp;client_key=&quot; + mastodonMemory.clientKey;" created="Wed, 23 Apr 2014 17:13:35 GMT" pgfnum="40477"/>
					<outline text="httpRequest (urlServer, undefined, undefined, callback);"/>
					<outline text="}" created="Sun, 20 Nov 2022 00:42:49 GMT"/>
					</outline>
				<outline text="" created="Mon, 21 Nov 2022 14:35:10 GMT"/>
				<outline text="function servercall (path, params, flAuthenticated, callback, urlServer=mastodonMemory.urlMastoLandServer) {">
					<outline text="Changes" isComment="true">
						<outline text="11/21/22; 8:13:15 AM by DW" created="Mon, 21 Nov 2022 13:13:14 GMT">
							<outline text="Cribbed from feedlandHome." created="Mon, 21 Nov 2022 13:13:15 GMT"/>
							</outline>
						<outline text="12/10/21; 12:51:58 PM by DW" created="Fri, 10 Dec 2021 17:51:57 GMT">
							<outline text="New optional parameter, urlServer, so this function can be used to call Daytona." created="Fri, 10 Dec 2021 17:51:58 GMT"/>
							</outline>
						<outline text="1/11/21; 12:51:47 PM by DW">
							<outline text="New param, flAuthenticated. If true we add the oAuth info to the call. "/>
							</outline>
						</outline>
					<outline text="var whenstart = new Date ();"/>
					<outline text="if (params === undefined) {">
						<outline text="params = new Object ();"/>
						<outline text="}"/>
						</outline>
					<outline text="if (flAuthenticated) { //1/11/21 by DW">
						<outline text="params.access_token = mastodonMemory.access_token;"/>
						<outline text="params.client_key = mastodonMemory.clientKey;"/>
						<outline text="}"/>
						</outline>
					<outline text="var url = urlServer + path + &quot;?&quot; + buildParamList (params);" created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215"/>
					<outline text="httpRequest (url, undefined, undefined, function (err, jsontext) {">
						<outline text="if (err) {">
							<outline text="console.log (&quot;servercall: url == &quot; + url + &quot;, err.message == &quot; + err.message);"/>
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="console.log (&quot;servercall: jsontext.length == &quot; + jsontext.length + &quot;, secs == &quot; + secondsSince (whenstart)); " isComment="true"/>
							<outline text="callback (undefined, JSON.parse (jsontext));"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function servercall (path, params, flAuthenticated, callback, urlServer=mastodonMemory.urlMastodonServer) {" isComment="true">
					<outline text="Changes" isComment="true">
						<outline text="12/10/21; 12:51:58 PM by DW" created="Fri, 10 Dec 2021 17:51:57 GMT">
							<outline text="New optional parameter, urlServer, so this function can be used to call Daytona." created="Fri, 10 Dec 2021 17:51:58 GMT"/>
							</outline>
						<outline text="1/11/21; 12:51:47 PM by DW">
							<outline text="New param, flAuthenticated. If true we add the oAuth info to the call. "/>
							</outline>
						</outline>
					<outline text="var whenstart = new Date ();"/>
					<outline text="if (params === undefined) {">
						<outline text="params = new Object ();"/>
						<outline text="}"/>
						</outline>
					<outline text="if (flAuthenticated) { //1/11/21 by DW">
						<outline text="params.oauth_token = localStorage.twOauthToken;"/>
						<outline text="params.oauth_token_secret = localStorage.twOauthTokenSecret;"/>
						<outline text="}"/>
						</outline>
					<outline text="var url = urlServer + path + &quot;?&quot; + buildParamList (params, false);" created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215"/>
					<outline text="httpRequest (url, undefined, undefined, function (err, jsontext) {">
						<outline text="if (err) {">
							<outline text="console.log (&quot;servercall: url == &quot; + url + &quot;, err.message == &quot; + err.message);"/>
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="console.log (&quot;servercall: jsontext.length == &quot; + jsontext.length + &quot;, secs == &quot; + secondsSince (whenstart)); " isComment="true"/>
							<outline text="callback (undefined, JSON.parse (jsontext));"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function serverpost (path, params, flAuthenticated, filedata, callback, urlServer=mastodonMemory.urlMastodonServer) {" isComment="true">
					<outline text="Changes" isComment="true">
						<outline text="8/2/21; 2:19:56 PM by DW" created="Mon, 02 Aug 2021 18:19:55 GMT">
							<outline text="If filedata is not a PlainObject or a string, convert it to a string." created="Mon, 02 Aug 2021 18:19:58 GMT"/>
							</outline>
						<outline text="2/25/21; 1:01:58 PM by DW">
							<outline text="A special form of servercall for posts."/>
							</outline>
						</outline>
					<outline text="var whenstart = new Date ();"/>
					<outline text="if (filedata !== undefined) {" created="Sat, 19 Nov 2022 16:01:25 GMT">
						<outline text="if (!$.isPlainObject (filedata) &amp;&amp; (typeof (filedata) != &quot;string&quot;)) { //8/2/21 by DW" created="Mon, 02 Aug 2021 18:36:54 GMT">
							<outline text="filedata = filedata.toString ();" created="Mon, 02 Aug 2021 18:38:49 GMT"/>
							<outline text="}" created="Mon, 02 Aug 2021 18:38:43 GMT"/>
							</outline>
						<outline text="}" created="Sat, 19 Nov 2022 16:01:30 GMT"/>
						</outline>
					<outline text="if (params === undefined) {">
						<outline text="params = new Object ();"/>
						<outline text="}"/>
						</outline>
					<outline text="if (flAuthenticated) { //1/11/21 by DW">
						<outline text="params.oauth_token = localStorage.twOauthToken;"/>
						<outline text="params.oauth_token_secret = localStorage.twOauthTokenSecret;"/>
						<outline text="}"/>
						</outline>
					<outline text="var url = urlServer + path + &quot;?&quot; + buildParamList (params, false);" created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215"/>
					<outline text="$.post (url, filedata, function (data, status) {" created="Sat, 09 Aug 2014 15:59:33 GMT" pgfnum="43210">
						<outline text="if (status == &quot;success&quot;) {" created="Sat, 09 Aug 2014 16:04:22 GMT" pgfnum="43217">
							<outline text="console.log (&quot;serverpost: url == &quot; + url + &quot;, secs == &quot; + secondsSince (whenstart)); " isComment="true"/>
							<outline text="if (callback !== undefined) {" created="Mon, 29 Mar 2021 17:13:51 GMT">
								<outline text="callback (undefined, data);" created="Sat, 09 Aug 2014 16:04:47 GMT" pgfnum="43222"/>
								<outline text="}" created="Mon, 29 Mar 2021 17:13:56 GMT"/>
								</outline>
							<outline text="}" created="Sat, 09 Aug 2014 16:04:38 GMT" pgfnum="43219"/>
							</outline>
						<outline text="else {" created="Sat, 09 Aug 2014 16:04:39 GMT" pgfnum="43220">
							<outline text="var err = {">
								<outline text="code: status.status,"/>
								<outline text="message: JSON.parse (status.responseText).message"/>
								<outline text="};"/>
								</outline>
							<outline text="if (callback !== undefined) {" created="Mon, 29 Mar 2021 17:13:51 GMT">
								<outline text="callback (err);"/>
								<outline text="}" created="Mon, 29 Mar 2021 17:13:56 GMT"/>
								</outline>
							<outline text="}" created="Sat, 09 Aug 2014 16:04:41 GMT" pgfnum="43221"/>
							</outline>
						<outline text="});" created="Sat, 09 Aug 2014 16:00:26 GMT" pgfnum="43214"/>
						</outline>
					<outline text="httpRequest (url, undefined, undefined, function (err, jsontext) {" isComment="true">
						<outline text="if (err) {">
							<outline text="console.log (&quot;servercall: url == &quot; + url + &quot;, err.message == &quot; + err.message);"/>
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="console.log (&quot;servercall: url == &quot; + url + &quot;, secs == &quot; + secondsSince (whenstart)); "/>
							<outline text="callback (undefined, JSON.parse (jsontext));"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="" created="Tue, 15 Nov 2022 14:35:18 GMT"/>
				<outline text="function getServerInfo (callback) {" created="Tue, 15 Nov 2022 14:35:18 GMT">
					<outline text="servercall (&quot;api/v1/instance&quot;, undefined, undefined, callback);" created="Tue, 15 Nov 2022 14:35:35 GMT"/>
					<outline text="}" created="Tue, 15 Nov 2022 14:35:29 GMT"/>
					</outline>
				<outline text="function getPublicTimeline (limit=100, callback) {" created="Tue, 15 Nov 2022 14:35:18 GMT">
					<outline text="servercall (&quot;api/v1/timelines/public&quot;, {limit}, undefined, callback);" created="Tue, 15 Nov 2022 14:35:35 GMT"/>
					<outline text="}" created="Tue, 15 Nov 2022 14:35:29 GMT"/>
					</outline>
				<outline text="function getPublicStatusesWithTag (theTag, limit=100, callback) {" created="Tue, 15 Nov 2022 14:35:18 GMT">
					<outline text="servercall (&quot;api/v1/timelines/tag/&quot; + theTag, {limit}, undefined, callback);" created="Tue, 15 Nov 2022 14:35:35 GMT"/>
					<outline text="}" created="Tue, 15 Nov 2022 14:35:29 GMT"/>
					</outline>
				<outline text="function getUserStatuses (id, limit=100, callback) {" created="Tue, 15 Nov 2022 14:35:18 GMT">
					<outline text="servercall (&quot;api/v1/accounts/&quot; + id + &quot;/statuses/&quot;, {limit}, undefined, callback);" created="Tue, 15 Nov 2022 14:35:35 GMT"/>
					<outline text="}" created="Tue, 15 Nov 2022 14:35:29 GMT"/>
					</outline>
				<outline text="function postNewStatus (status, inReplyTo, callback) {" created="Sun, 20 Nov 2022 22:17:23 GMT">
					<outline text="const params = {" created="Mon, 21 Nov 2022 14:36:47 GMT">
						<outline text="status," created="Mon, 21 Nov 2022 14:37:01 GMT"/>
						<outline text="inReplyTo" created="Mon, 21 Nov 2022 14:37:03 GMT"/>
						<outline text="};" created="Mon, 21 Nov 2022 14:36:54 GMT"/>
						</outline>
					<outline text="servercall (&quot;toot&quot;, params, true, callback);" created="Mon, 21 Nov 2022 13:09:51 GMT"/>
					<outline text="}" created="Sun, 20 Nov 2022 22:17:38 GMT"/>
					</outline>
				<outline text="function getUserInfo (callback) {" created="Mon, 21 Nov 2022 13:49:26 GMT">
					<outline text="servercall (&quot;getuserinfo&quot;, undefined, true, callback);" created="Mon, 21 Nov 2022 13:09:51 GMT"/>
					<outline text="}" created="Mon, 21 Nov 2022 13:49:39 GMT"/>
					</outline>
				<outline text="" created="Mon, 21 Nov 2022 14:34:04 GMT"/>
				<outline text="function testGetServerInfo () {" created="Tue, 15 Nov 2022 14:36:41 GMT">
					<outline text="getServerInfo (function (err, theServerInfo) {" created="Tue, 15 Nov 2022 14:36:53 GMT">
						<outline text="if (err) {" created="Tue, 15 Nov 2022 14:37:06 GMT">
							<outline text="console.log (err.message);" created="Tue, 15 Nov 2022 14:37:17 GMT"/>
							<outline text="}" created="Tue, 15 Nov 2022 14:37:26 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 15 Nov 2022 14:37:27 GMT">
							<outline text="console.log (jsonStringify (theServerInfo));" created="Tue, 15 Nov 2022 14:37:17 GMT"/>
							<outline text="}" created="Tue, 15 Nov 2022 14:37:32 GMT"/>
							</outline>
						<outline text="})" created="Tue, 15 Nov 2022 14:37:03 GMT"/>
						</outline>
					<outline text="}" created="Tue, 15 Nov 2022 14:36:49 GMT"/>
					</outline>
				<outline text="function testGetPublicTimeline () {" created="Tue, 15 Nov 2022 14:36:41 GMT">
					<outline text="getPublicTimeline (undefined, function (err, theTimeline) {" created="Tue, 15 Nov 2022 14:36:53 GMT">
						<outline text="if (err) {" created="Tue, 15 Nov 2022 14:37:06 GMT">
							<outline text="console.log (err.message);" created="Tue, 15 Nov 2022 14:37:17 GMT"/>
							<outline text="}" created="Tue, 15 Nov 2022 14:37:26 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 15 Nov 2022 14:37:27 GMT">
							<outline text="console.log (jsonStringify (theTimeline));" created="Tue, 15 Nov 2022 14:37:17 GMT"/>
							<outline text="}" created="Tue, 15 Nov 2022 14:37:32 GMT"/>
							</outline>
						<outline text="})" created="Tue, 15 Nov 2022 14:37:03 GMT"/>
						</outline>
					<outline text="}" created="Tue, 15 Nov 2022 14:36:49 GMT"/>
					</outline>
				<outline text="function testGetPublicStatusesWithTag () {" created="Tue, 15 Nov 2022 14:36:41 GMT">
					<outline text="getPublicStatusesWithTag (&quot;testing&quot;, undefined, function (err, theStatuses) {" created="Tue, 15 Nov 2022 14:36:53 GMT">
						<outline text="if (err) {" created="Tue, 15 Nov 2022 14:37:06 GMT">
							<outline text="console.log (err.message);" created="Tue, 15 Nov 2022 14:37:17 GMT"/>
							<outline text="}" created="Tue, 15 Nov 2022 14:37:26 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 15 Nov 2022 14:37:27 GMT">
							<outline text="console.log (jsonStringify (theStatuses));" created="Tue, 15 Nov 2022 14:37:17 GMT"/>
							<outline text="}" created="Tue, 15 Nov 2022 14:37:32 GMT"/>
							</outline>
						<outline text="})" created="Tue, 15 Nov 2022 14:37:03 GMT"/>
						</outline>
					<outline text="}" created="Tue, 15 Nov 2022 14:36:49 GMT"/>
					</outline>
				<outline text="function testGetUserStatuses () {" created="Tue, 15 Nov 2022 14:36:41 GMT">
					<outline text="Changes" isComment="true" created="Tue, 15 Nov 2022 16:05:13 GMT">
						<outline text="11/15/22; 1:23:19 PM by DW" created="Tue, 15 Nov 2022 18:23:19 GMT">
							<outline text="Fixed. I had the URL wrong in the glue script. I needed a break." created="Tue, 15 Nov 2022 18:23:20 GMT"/>
							</outline>
						<outline text="11/15/22; 11:05:16 AM by DW" created="Tue, 15 Nov 2022 16:05:15 GMT">
							<outline text="I tried &quot;dave&quot; and @dave and the id value from the account object in the timeline element, but I get a 404 for all of them." created="Tue, 15 Nov 2022 16:05:17 GMT"/>
							</outline>
						</outline>
					<outline text="getUserStatuses (&quot;109348280299564804&quot;, undefined, function (err, theStatuses) {" created="Tue, 15 Nov 2022 14:36:53 GMT">
						<outline text="if (err) {" created="Tue, 15 Nov 2022 14:37:06 GMT">
							<outline text="console.log (err.message);" created="Tue, 15 Nov 2022 14:37:17 GMT"/>
							<outline text="}" created="Tue, 15 Nov 2022 14:37:26 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 15 Nov 2022 14:37:27 GMT">
							<outline text="console.log (jsonStringify (theStatuses));" created="Tue, 15 Nov 2022 14:37:17 GMT"/>
							<outline text="}" created="Tue, 15 Nov 2022 14:37:32 GMT"/>
							</outline>
						<outline text="})" created="Tue, 15 Nov 2022 14:37:03 GMT"/>
						</outline>
					<outline text="}" created="Tue, 15 Nov 2022 14:36:49 GMT"/>
					</outline>
				<outline text="function testGetUserInfo () {" created="Mon, 21 Nov 2022 13:50:33 GMT">
					<outline text="getUserInfo (function (err, theInfo) {" created="Mon, 21 Nov 2022 13:50:46 GMT">
						<outline text="if (err) {" created="Tue, 15 Nov 2022 14:37:06 GMT">
							<outline text="console.log (err.message);" created="Tue, 15 Nov 2022 14:37:17 GMT"/>
							<outline text="}" created="Tue, 15 Nov 2022 14:37:26 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 15 Nov 2022 14:37:27 GMT">
							<outline text="console.log (jsonStringify (theInfo));" created="Tue, 15 Nov 2022 14:37:17 GMT"/>
							<outline text="}" created="Tue, 15 Nov 2022 14:37:32 GMT"/>
							</outline>
						<outline text="});" created="Mon, 21 Nov 2022 13:50:56 GMT"/>
						</outline>
					<outline text="}" created="Mon, 21 Nov 2022 13:50:40 GMT"/>
					</outline>
				<outline text="function testPostStatus () {" created="Sat, 19 Nov 2022 20:09:31 GMT">
					<outline text="postStatus (&quot;I'm a tootin fool&quot;, function (err, data) {" created="Sat, 19 Nov 2022 20:09:40 GMT">
						<outline text="if (err) {" created="Sat, 19 Nov 2022 20:10:06 GMT">
							<outline text="alertDialog (err.message);" created="Sat, 19 Nov 2022 20:10:09 GMT"/>
							<outline text="}" created="Sat, 19 Nov 2022 20:10:14 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 19 Nov 2022 20:10:15 GMT">
							<outline text="console.log (data); //11/20/22 -- I have yet to see what I get back from this! ;-)" created="Sat, 19 Nov 2022 20:10:17 GMT"/>
							<outline text="}" created="Sat, 19 Nov 2022 20:10:25 GMT"/>
							</outline>
						<outline text="});" created="Sat, 19 Nov 2022 20:09:59 GMT"/>
						</outline>
					<outline text="}" created="Sat, 19 Nov 2022 20:09:39 GMT"/>
					</outline>
				<outline text="" created="Tue, 22 Nov 2022 21:54:59 GMT"/>
				<outline text="function lookForOauthToken () {" created="Sat, 19 Nov 2022 13:08:43 GMT">
					<outline text="var allparams = getAllUrlParams (); //9/7/22 by DW" created="Wed, 07 Sep 2022 15:42:36 GMT"/>
					<outline text="var paramval = {" created="Thu, 26 May 2022 15:36:39 GMT">
						<outline text="};" created="Thu, 26 May 2022 15:36:46 GMT"/>
						</outline>
					<outline text="var firstParam = getFirstUrlParam (paramval);" created="Sat, 29 Oct 2022 16:08:48 GMT"/>
					<outline text="switch (firstParam) { " created="Thu, 26 May 2022 15:23:57 GMT">
						<outline text="case &quot;code&quot;: " created="Sat, 19 Nov 2022 12:56:07 GMT">
							<outline text="getAccessToken (paramval.val, function (err, jsontext) {" created="Sun, 20 Nov 2022 00:41:22 GMT">
								<outline text="if (err) {" created="Sun, 20 Nov 2022 00:41:47 GMT">
									<outline text="alertDialog (err.message);" created="Sun, 20 Nov 2022 00:41:49 GMT"/>
									<outline text="}" created="Sun, 20 Nov 2022 00:41:56 GMT"/>
									</outline>
								<outline text="else {" created="Sun, 20 Nov 2022 00:41:57 GMT">
									<outline text="try {" created="Sun, 20 Nov 2022 00:51:03 GMT">
										<outline text="jstruct = JSON.parse (jsontext);" created="Sun, 20 Nov 2022 00:51:15 GMT"/>
										<outline text="}" created="Sun, 20 Nov 2022 00:51:07 GMT"/>
										</outline>
									<outline text="catch (err) {" created="Sun, 20 Nov 2022 00:51:08 GMT">
										<outline text="alertDialog (err.message);" created="Sun, 20 Nov 2022 00:41:49 GMT"/>
										<outline text="}" created="Sun, 20 Nov 2022 00:51:11 GMT"/>
										</outline>
									<outline text="for (var x in jstruct) {" created="Sun, 20 Nov 2022 00:51:04 GMT">
										<outline text="mastodonMemory [x] = jstruct [x];" created="Sun, 20 Nov 2022 00:52:09 GMT"/>
										<outline text="}" created="Sun, 20 Nov 2022 00:51:54 GMT"/>
										</outline>
									<outline text="saveMastodonMemory ();"/>
									<outline text="setTimeout (function () { //make absolutely sure the localStorage data is saved before we redirect" created="Sat, 19 Nov 2022 13:06:33 GMT">
										<outline text="window.location.href = stringNthField (window.location.href, &quot;?&quot;, 1);" created="Sat, 19 Nov 2022 12:57:17 GMT"/>
										<outline text="}, 5)" created="Sat, 19 Nov 2022 13:06:42 GMT"/>
										</outline>
									<outline text="}" created="Sun, 20 Nov 2022 00:41:58 GMT"/>
									</outline>
								<outline text="});" created="Sun, 20 Nov 2022 00:41:41 GMT"/>
								</outline>
							<outline text="break;" created="Sat, 19 Nov 2022 12:58:32 GMT"/>
							</outline>
						<outline text="case &quot;code&quot;: " isComment="true" created="Sat, 19 Nov 2022 12:56:07 GMT">
							<outline text="mastodonMemory.token = paramval.val;" created="Sat, 19 Nov 2022 12:56:15 GMT"/>
							<outline text="saveMastodonMemory ();" created="Sat, 19 Nov 2022 13:05:58 GMT"/>
							<outline text="setTimeout (function () { //make absolutely sure the localStorage data is saved before we redirect" created="Sat, 19 Nov 2022 13:06:33 GMT">
								<outline text="window.location.href = stringNthField (window.location.href, &quot;?&quot;, 1);" created="Sat, 19 Nov 2022 12:57:17 GMT"/>
								<outline text="}, 5)" created="Sat, 19 Nov 2022 13:06:42 GMT"/>
								</outline>
							<outline text="break;" created="Sat, 19 Nov 2022 12:58:32 GMT"/>
							</outline>
						<outline text="}" created="Thu, 26 May 2022 15:24:06 GMT"/>
						</outline>
					<outline text="}" created="Sat, 19 Nov 2022 13:08:47 GMT"/>
					</outline>
				</outline>
			<outline text="code.js" created="Mon, 06 Jun 2022 15:20:22 GMT">
				<outline text="const appConsts = {" created="Tue, 15 Nov 2022 14:33:40 GMT">
					<outline text="urlMastodonServer: &quot;http://social.scottfr.ee/&quot;," isComment="true" created="Tue, 15 Nov 2022 14:33:51 GMT"/>
					<outline text="urlMastoLandServer: &quot;http://dave.masto.land/&quot;, " isComment="true" created="Sun, 20 Nov 2022 18:49:35 GMT"/>
					<outline text="clientKey: &quot;czV8bisLmBQAS4XhXubYnaRMf_36tODiO5YE80C3x0M&quot;" isComment="true" created="Fri, 18 Nov 2022 20:19:28 GMT"/>
					<outline text=""/>
					<outline text="};" created="Tue, 15 Nov 2022 14:33:46 GMT"/>
					</outline>
				<outline text="function startButtons () {" created="Mon, 21 Nov 2022 12:54:56 GMT">
					<outline text="const loginbutton = $(&quot;#idMastoSignonButton&quot;);" created="Sat, 19 Nov 2022 15:02:54 GMT"/>
					<outline text="loginbutton.click (function () {" created="Sat, 19 Nov 2022 15:01:57 GMT">
						<outline text="console.log (&quot;Click&quot;);" created="Sat, 19 Nov 2022 15:02:09 GMT"/>
						<outline text="loginbutton.blur ();" created="Sat, 19 Nov 2022 15:03:09 GMT"/>
						<outline text="userLogin (mastodonMemory.clientKey);" created="Sat, 19 Nov 2022 15:03:21 GMT"/>
						<outline text="});" created="Sat, 19 Nov 2022 15:02:07 GMT"/>
						</outline>
					<outline text="" created="Sat, 19 Nov 2022 15:05:57 GMT"/>
					<outline text="const signoffbutton = $(&quot;#idMastoSignoffButton&quot;);" created="Sat, 19 Nov 2022 15:02:54 GMT"/>
					<outline text="signoffbutton.click (function () {" created="Sat, 19 Nov 2022 15:05:59 GMT">
						<outline text="for (var x in mastodonMemory) {" created="Sun, 20 Nov 2022 01:00:56 GMT">
							<outline text="mastodonMemory [x] = undefined;" created="Sun, 20 Nov 2022 01:01:16 GMT"/>
							<outline text="}" created="Sun, 20 Nov 2022 01:01:11 GMT"/>
							</outline>
						<outline text="initMastodonMemory ();" created="Sat, 26 Nov 2022 20:04:52 GMT"/>
						<outline text="saveMastodonMemory ();" created="Sat, 19 Nov 2022 13:05:58 GMT"/>
						<outline text="});" created="Sat, 19 Nov 2022 15:06:29 GMT"/>
						</outline>
					<outline text="" created="Sat, 19 Nov 2022 15:10:46 GMT"/>
					<outline text="const mastotootbutton = $(&quot;#idMastoTootButton&quot;);" created="Sat, 19 Nov 2022 15:02:54 GMT"/>
					<outline text="mastotootbutton.click (function () {" created="Sat, 19 Nov 2022 15:05:59 GMT">
						<outline text="askDialog (&quot;What would you like to toot?&quot;, mastodonMemory.lastTootString, &quot;Oh say can you toot.&quot;, function (tootableString, flcancel) {" created="Tue, 08 Jan 2013 01:26:19 GMT" pgfnum="16860">
							<outline text="if (!flcancel) {" created="Sun, 20 Nov 2022 01:06:50 GMT">
								<outline text="mastodonMemory.lastTootString = tootableString;" created="Sun, 20 Nov 2022 01:06:59 GMT"/>
								<outline text="saveMastodonMemory ();" created="Sat, 19 Nov 2022 13:16:02 GMT"/>
								<outline text="postNewStatus (tootableString, undefined, function (err, data) {" created="Sun, 20 Nov 2022 01:07:54 GMT">
									<outline text="if (err) {" created="Mon, 21 Nov 2022 12:57:09 GMT">
										<outline text="alertDialog (err.message);" created="Mon, 21 Nov 2022 12:57:21 GMT"/>
										<outline text="}" created="Mon, 21 Nov 2022 12:57:13 GMT"/>
										</outline>
									<outline text="else {" created="Mon, 21 Nov 2022 12:57:14 GMT">
										<outline text="console.log (&quot;mastotootbutton: data == &quot; + jsonStringify (data));" created="Mon, 21 Nov 2022 12:57:35 GMT"/>
										<outline text="}" created="Mon, 21 Nov 2022 12:57:16 GMT"/>
										</outline>
									<outline text="});" created="Mon, 21 Nov 2022 12:57:05 GMT"/>
									</outline>
								<outline text="}" created="Sun, 20 Nov 2022 01:06:54 GMT"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="});" created="Sat, 19 Nov 2022 15:06:29 GMT"/>
						</outline>
					<outline text="" created="Sat, 26 Nov 2022 16:59:21 GMT"/>
					<outline text="const userinfobutton = $(&quot;#idUserinfoButton&quot;);" created="Sat, 19 Nov 2022 15:02:54 GMT"/>
					<outline text="userinfobutton.click (function () {" created="Sat, 19 Nov 2022 15:05:59 GMT">
						<outline text="getUserInfo (function (err, theInfo) {" created="Sat, 26 Nov 2022 17:00:00 GMT">
							<outline text="if (err) {" created="Sat, 26 Nov 2022 17:00:14 GMT">
								<outline text="alertDialog (err.message);" created="Sat, 26 Nov 2022 17:00:56 GMT"/>
								<outline text="}" created="Sat, 26 Nov 2022 17:01:01 GMT"/>
								</outline>
							<outline text="else {" created="Sat, 26 Nov 2022 17:01:01 GMT">
								<outline text="console.log (jsonStringify (theInfo));" created="Sat, 26 Nov 2022 17:01:03 GMT"/>
								<outline text="}" created="Sat, 26 Nov 2022 17:01:13 GMT"/>
								</outline>
							<outline text="});" created="Sat, 26 Nov 2022 17:00:08 GMT"/>
							</outline>
						<outline text="});" created="Sat, 19 Nov 2022 15:06:29 GMT"/>
						</outline>
					<outline text="}" created="Mon, 21 Nov 2022 12:55:01 GMT"/>
					</outline>
				<outline text="function everySecond () {" created="Sat, 19 Nov 2022 15:07:12 GMT">
					<outline text="const flSignedOn = mastodonMemory.access_token !== undefined;" created="Sat, 19 Nov 2022 15:07:29 GMT"/>
					<outline text="if (flSignedOn) {" created="Sat, 19 Nov 2022 15:07:29 GMT">
						<outline text="$(&quot;#idSignedOn&quot;).css (&quot;display&quot;, &quot;block&quot;);" created="Sat, 19 Nov 2022 15:08:55 GMT"/>
						<outline text="$(&quot;#idSignedOff&quot;).css (&quot;display&quot;, &quot;none&quot;);" created="Sat, 19 Nov 2022 15:08:55 GMT"/>
						<outline text="}" created="Sat, 19 Nov 2022 15:07:56 GMT"/>
						</outline>
					<outline text="else {" created="Sat, 19 Nov 2022 15:07:57 GMT">
						<outline text="$(&quot;#idSignedOn&quot;).css (&quot;display&quot;, &quot;none&quot;);" created="Sat, 19 Nov 2022 15:08:55 GMT"/>
						<outline text="$(&quot;#idSignedOff&quot;).css (&quot;display&quot;, &quot;block&quot;);" created="Sat, 19 Nov 2022 15:08:55 GMT"/>
						<outline text="}" created="Sat, 19 Nov 2022 15:07:59 GMT"/>
						</outline>
					<outline text="}" created="Sat, 19 Nov 2022 15:07:17 GMT"/>
					</outline>
				<outline text="function startup () {" created="Mon, 06 Jun 2022 15:20:24 GMT">
					<outline text="" created="Sun, 20 Nov 2022 19:18:22 GMT"/>
					<outline text="console.log (&quot;startup&quot;);" created="Mon, 06 Jun 2022 15:21:52 GMT"/>
					<outline text="restoreMastodonMemory ();" created="Sat, 19 Nov 2022 13:16:02 GMT"/>
					<outline text="lookForOauthToken (); //if found it doesn't return" created="Sat, 19 Nov 2022 12:55:27 GMT"/>
					<outline text="startButtons ();" created="Mon, 21 Nov 2022 12:55:13 GMT"/>
					<outline text="self.setInterval (everySecond, 1000);" created="Sat, 19 Nov 2022 15:10:47 GMT"/>
					<outline text="}" created="Mon, 06 Jun 2022 15:21:50 GMT"/>
					</outline>
				</outline>
			<outline text="index.html" created="Thu, 07 Apr 2022 16:25:39 GMT">
				<outline text="&lt;html&gt;">
					<outline text="&lt;head&gt;">
						<outline text="&lt;title&gt;masto.land&lt;/title&gt;"/>
						<outline text="&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;"/>
						<outline text="&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;"/>
						<outline text="&lt;%basicIncludes2%&gt;"/>
						<outline text="&lt;script src=&quot;http://scripting.com/code/concord/testing/3.0.6/concord.js&quot;&gt;&lt;/script&gt;" isComment="true"/>
						<outline text="&lt;link rel=&quot;stylesheet&quot; href=&quot;http://scripting.com/code/concord/testing/3.0.6/concordstyles.css&quot;/&gt;" isComment="true"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/shared/outliner.js&quot;&gt;&lt;/script&gt;" isComment="true" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/shared/xml.js&quot;&gt;&lt;/script&gt;" isComment="true" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/keypress.js&quot; /&gt;&lt;/script&gt;" isComment="true"/>
						<outline text="&lt;script src=&quot;http://scripting.com/code/nodestorage/api.js&quot;&gt;&lt;/script&gt;" isComment="true" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="" created="Tue, 22 Nov 2022 21:56:03 GMT"/>
						<outline text="&lt;script src=&quot;http://scripting.com/code/mastohome/api.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="" created="Tue, 22 Nov 2022 21:56:04 GMT"/>
						<outline text="&lt;script src=&quot;code.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;link href=&quot;styles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;"/>
						<outline text="&lt;/head&gt;"/>
						</outline>
					<outline text="&lt;body&gt;">
						<outline text="&lt;div class=&quot;divPageBody&quot;&gt;">
							<outline text="&lt;div class=&quot;divSignedOn&quot; id=&quot;idSignedOn&quot; style=&quot;display: none;&quot;&gt;" created="Mon, 16 May 2022 14:35:36 GMT">
								<outline text="&lt;h4&gt;Click the button to sign off.&lt;h4&gt;" created="Sat, 19 Nov 2022 14:59:53 GMT"/>
								<outline text="&lt;button id=&quot;idMastoSignoffButton&quot;: class=&quot;btn btn-large btnMasto&quot; type=&quot;button&quot;&gt;Masto sign off&lt;/button&gt;" created="Tue, 06 May 2014 16:58:36 GMT" pgfnum="41161"/>
								<outline text="" created="Sat, 26 Nov 2022 17:02:27 GMT"/>
								<outline text="&lt;h4&gt;&lt;br&gt;Click the button to test a toot.&lt;h4&gt;" created="Sat, 19 Nov 2022 14:59:53 GMT"/>
								<outline text="&lt;button id=&quot;idMastoTootButton&quot;: class=&quot;btn btn-large btnMasto&quot; type=&quot;button&quot;&gt;Masto toot&lt;/button&gt;" created="Tue, 06 May 2014 16:58:36 GMT" pgfnum="41161"/>
								<outline text="" created="Sat, 26 Nov 2022 17:02:26 GMT"/>
								<outline text="&lt;h4&gt;&lt;br&gt;Click the button to get info about yourself, open the JavaScript console to see.&lt;h4&gt;" created="Sat, 19 Nov 2022 14:59:53 GMT"/>
								<outline text="&lt;button id=&quot;idUserinfoButton&quot;: class=&quot;btn btn-large btnMasto&quot; type=&quot;button&quot;&gt;Get your info&lt;/button&gt;" created="Tue, 06 May 2014 16:58:36 GMT" pgfnum="41161"/>
								<outline text="&lt;/div&gt;" created="Mon, 16 May 2022 14:36:01 GMT"/>
								</outline>
							<outline text="&lt;div class=&quot;divSignedOff&quot; id=&quot;idSignedOff&quot; style=&quot;display: none;&quot;&gt;" created="Mon, 16 May 2022 14:35:36 GMT">
								<outline text="&lt;h4&gt;Click the button to sign on via Mastodon.&lt;h4&gt;" created="Sat, 19 Nov 2022 14:59:53 GMT"/>
								<outline text="&lt;button id=&quot;idMastoSignonButton&quot;: class=&quot;btn btn-large btnMasto&quot; type=&quot;button&quot;&gt;Masto sign on&lt;/button&gt;" created="Tue, 06 May 2014 16:58:36 GMT" pgfnum="41161"/>
								<outline text="&lt;/div&gt;" created="Mon, 16 May 2022 14:36:01 GMT"/>
								</outline>
							<outline text="" isComment="true" created="Sat, 19 Nov 2022 14:59:54 GMT"/>
							<outline text="&lt;h1&gt;Mastodon API tester&lt;/h1&gt;" isComment="true" created="Tue, 15 Nov 2022 14:43:00 GMT"/>
							<outline text="&lt;p&gt;Let's build glue for scripting Mastodon!&lt;/p&gt;" isComment="true" created="Tue, 15 Nov 2022 14:43:13 GMT"/>
							<outline text="&lt;h4&gt;I've started by implementing four verbs. &lt;/h4&gt;" isComment="true" created="Tue, 15 Nov 2022 14:43:36 GMT"/>
							<outline text="&lt;ol&gt;" isComment="true" created="Tue, 15 Nov 2022 15:42:45 GMT">
								<outline text="&lt;li&gt;mastodon.getServerInfo&lt;/li&gt;" created="Tue, 15 Nov 2022 14:43:57 GMT"/>
								<outline text="&lt;li&gt;mastodon.getPublicTimeline&lt;/li&gt;" created="Tue, 15 Nov 2022 14:43:57 GMT"/>
								<outline text="&lt;li&gt;mastodon.getPublicStatusesWithTag&lt;/li&gt;" created="Tue, 15 Nov 2022 14:43:57 GMT"/>
								<outline text="&lt;li&gt;mastodon.getUserStatuses&lt;/li&gt;" created="Tue, 15 Nov 2022 14:43:57 GMT"/>
								<outline text="&lt;/ol&gt;" created="Tue, 15 Nov 2022 15:42:52 GMT"/>
								</outline>
							<outline text="&lt;h4&gt;The test functions are (meant to be called from the console):&lt;/h4&gt;" isComment="true" created="Tue, 15 Nov 2022 15:53:17 GMT">
								<outline text="&lt;ol&gt;" created="Tue, 15 Nov 2022 15:54:08 GMT">
									<outline text="&lt;li&gt;testGetServerInfo ()&lt;/li&gt;" created="Tue, 15 Nov 2022 14:43:57 GMT"/>
									<outline text="&lt;li&gt;testGetPublicTimeline ()&lt;/li&gt;" created="Tue, 15 Nov 2022 14:43:57 GMT"/>
									<outline text="&lt;li&gt;testGetPublicStatusesWithTag ()&lt;/li&gt;" created="Tue, 15 Nov 2022 14:43:57 GMT"/>
									<outline text="&lt;li&gt;testGetUserStatuses ()&lt;/li&gt;" created="Tue, 15 Nov 2022 14:43:57 GMT"/>
									<outline text="&lt;/ol&gt;" created="Tue, 15 Nov 2022 15:42:52 GMT"/>
									</outline>
								</outline>
							<outline text="&lt;h4&gt;How to test:&lt;/h4&gt;" isComment="true" created="Tue, 15 Nov 2022 14:43:57 GMT">
								<outline text="&lt;ol&gt;" created="Tue, 15 Nov 2022 14:44:18 GMT">
									<outline text="&lt;li&gt;Open the JavaScript console.&lt;/li&gt;" created="Tue, 15 Nov 2022 14:44:29 GMT"/>
									<outline text="&lt;li&gt;Type testGetServerInfo () and press Return. Or one of the other verbs listed above.&lt;/li&gt;" created="Tue, 15 Nov 2022 14:44:29 GMT"/>
									<outline text="&lt;li&gt;The JavaScript object that is returned is displayed in the console.&lt;/li&gt;" created="Tue, 15 Nov 2022 14:44:29 GMT"/>
									<outline text="&lt;/ol&gt;" created="Tue, 15 Nov 2022 14:44:24 GMT"/>
									</outline>
								</outline>
							<outline text="&lt;h4&gt;BTW..&lt;/h4&gt;" isComment="true" created="Tue, 15 Nov 2022 16:28:17 GMT">
								<outline text="&lt;li&gt;If you stumbled across this randomly, the &lt;a href=&quot;https://github.com/scripting/reallySimpleActivityPub/tree/main/scriptingglue&quot;&gt;repo is here&lt;/a&gt;, and the &lt;a href=&quot;https://github.com/scripting/reallySimpleActivityPub/issues/2&quot;&gt;discussion thread&lt;/a&gt;.&lt;/li&gt;" created="Tue, 15 Nov 2022 16:28:29 GMT"/>
								</outline>
							<outline text="&lt;/div&gt;"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="$(document).ready (function () {">
								<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
								<outline text="});"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/body&gt;"/>
						</outline>
					<outline text="&lt;/html&gt;"/>
					</outline>
				</outline>
			<outline text="readme.md" created="Tue, 15 Nov 2022 14:54:28 GMT">
				<outline text="# Scripting glue" created="Tue, 15 Nov 2022 14:54:33 GMT">
					<outline text="Let's build glue for scripting Mastodon from JavaScript!" created="Tue, 15 Nov 2022 14:43:13 GMT"/>
					<outline text="You can run the &lt;a href=&quot;http://scripting.com/code/reallysimpleactivitypub/scriptingglue/&quot;&gt;testing user interface&lt;/a&gt; here." created="Tue, 15 Nov 2022 15:55:09 GMT"/>
					<outline text="11/15/22 by DW" created="Tue, 15 Nov 2022 14:55:00 GMT"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Sun, 20 Nov 2022 14:50:48 GMT">
			<outline text="nodeEditorSuite.utilities.buildIMastoHome ()" created="Sun, 06 Nov 2022 15:51:50 GMT"/>
			</outline>
		</body>
	</opml>
