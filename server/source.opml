<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Sun, 27 Nov 2022 13:01:59 GMT -->
<opml version="2.0">
	<head>
		<title>nodeEditor: mastoServer</title>
		<dateCreated>Sat, 19 Nov 2022 13:58:16 GMT</dateCreated>
		<dateModified>Sun, 27 Nov 2022 13:01:58 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 3, 4, 11, 18, 31, 32, 33, 35, 37, 49, 50, 51, 53, 55, 56, 60, 64, 70, 71, 72, 74, 76, 79, 81, 82, 98, 99, 100, 105, 107, 108, 123, 124, 126, 129, 138, 140, 142, 143, 161, 162, 163, 164, 191</expansionState>
		<vertScrollState>154</vertScrollState>
		<windowTop>132</windowTop>
		<windowLeft>511</windowLeft>
		<windowBottom>1013</windowBottom>
		<windowRight>1660</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/mastoserver/">
			<outline text="worknotes.md" created="Fri, 25 Nov 2022 14:25:58 GMT">
				<outline text="#### 11/25/22; 9:26:05 AM by DW" created="Fri, 25 Nov 2022 14:26:01 GMT">
					<outline text="New database -- mastoland" created="Fri, 25 Nov 2022 14:26:06 GMT">
						<outline text="create table apps (" created="Fri, 25 Nov 2022 18:12:24 GMT">
							<outline text="appName varchar (32)," created="Fri, 25 Nov 2022 18:13:23 GMT"/>
							<outline text="serverUrl varchar (512)," created="Fri, 25 Nov 2022 21:27:23 GMT"/>
							<outline text="clientKey text, " created="Fri, 25 Nov 2022 18:17:35 GMT"/>
							<outline text="clientSecret text, " created="Fri, 25 Nov 2022 18:17:35 GMT"/>
							<outline text="redirectUrl text," created="Fri, 25 Nov 2022 18:22:09 GMT"/>
							<outline text="vapidKey text, " created="Fri, 25 Nov 2022 18:17:35 GMT"/>
							<outline text="website text," created="Fri, 25 Nov 2022 18:13:23 GMT"/>
							<outline text="primary key (serverUrl, appName)"/>
							<outline text=");" created="Fri, 25 Nov 2022 18:13:12 GMT"/>
							</outline>
						</outline>
					</outline>
				</outline>
			<outline text="package.json" created="Wed, 16 Nov 2022 14:25:59 GMT">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;mastoserver&quot;,"/>
					<outline text="&quot;description&quot;: &quot;A server app that connects to Mastodon via OAuth.&quot;,"/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;main&quot;: &quot;mastoserver.js&quot;,"/>
					<outline text="&quot;license&quot;: &quot;MIT&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.0&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;request&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davehttp&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davesql&quot;: &quot;*&quot;," isComment="true"/>
						<outline text="&quot;daveutils&quot;: &quot;*&quot;"/>
						<outline text="} "/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="mastoserver.js" created="Wed, 16 Nov 2022 14:27:21 GMT">
				<outline text="const myVersion = &quot;0.4.0&quot;, myProductName = &quot;mastoserver&quot;; " created="Mon, 03 Feb 2014 03:21:03 GMT" pgfnum="36831"/>
				<outline text="" created="Wed, 16 Nov 2022 14:30:23 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);"/>
				<outline text="const request = require (&quot;request&quot;);"/>
				<outline text="const davehttp = require (&quot;davehttp&quot;);"/>
				<outline text="const utils = require (&quot;daveutils&quot;);"/>
				<outline text="" created="Wed, 16 Nov 2022 14:31:49 GMT"/>
				<outline text="var config = {">
					<outline text="servers: [" created="Wed, 23 Nov 2022 14:47:04 GMT">
						<outline text="{" created="Wed, 23 Nov 2022 14:47:36 GMT">
							<outline text="clientKey: undefined, "/>
							<outline text="clientSecret: undefined,"/>
							<outline text="urlRedirect: undefined," created="Wed, 23 Nov 2022 15:00:36 GMT"/>
							<outline text="urlMastodonServer: undefined," created="Tue, 15 Nov 2022 14:33:51 GMT"/>
							<outline text="}" created="Wed, 23 Nov 2022 14:47:38 GMT"/>
							</outline>
						<outline text="]," created="Wed, 23 Nov 2022 14:47:12 GMT"/>
						</outline>
					<outline text="apps: [" isComment="true" created="Fri, 25 Nov 2022 14:28:25 GMT">
						<outline text="{" created="Fri, 25 Nov 2022 14:29:51 GMT">
							<outline text="client_name: &quot;Radio 3&quot;," created="Fri, 25 Nov 2022 14:27:12 GMT"/>
							<outline text="redirect_uris: &quot;http://radio3.io/&quot;," created="Fri, 25 Nov 2022 14:27:12 GMT"/>
							<outline text="scopes: &quot;write&quot;," created="Fri, 25 Nov 2022 14:27:43 GMT"/>
							<outline text="website: &quot;http://radio3.io/&quot;" created="Fri, 25 Nov 2022 14:27:36 GMT"/>
							<outline text="}" created="Fri, 25 Nov 2022 14:29:53 GMT"/>
							</outline>
						<outline text="]," created="Fri, 25 Nov 2022 14:29:46 GMT"/>
						</outline>
					<outline text="" created="Fri, 25 Nov 2022 14:28:26 GMT"/>
					<outline text="" created="Fri, 25 Nov 2022 14:28:26 GMT"/>
					<outline text="" created="Fri, 25 Nov 2022 14:28:26 GMT"/>
					<outline text="myAccessToken: undefined," isComment="true"/>
					<outline text="urlRedirectForUser: &quot;http://localhost:1401/blagooey&quot;, //the page we send the user back to once they're logged in" isComment="true" created="Fri, 18 Nov 2022 14:41:56 GMT"/>
					<outline text="" created="Wed, 16 Nov 2022 17:19:11 GMT"/>
					<outline text="httpPort: process.env.PORT || 1401,"/>
					<outline text="myDomain: &quot;localhost&quot;,"/>
					<outline text="twitterConsumerKey: undefined," isComment="true"/>
					<outline text="twitterConsumerSecret: undefined," isComment="true"/>
					<outline text="flForceTwitterLogin: false," isComment="true"/>
					<outline text="flLogToConsole: true,"/>
					<outline text="flAllowAccessFromAnywhere: true, //1/2/18 by DW"/>
					<outline text="flPostEnabled: false, //1/3/18 by DW"/>
					<outline text="" created="Wed, 16 Nov 2022 17:19:10 GMT"/>
					<outline text="httpRequestCallback: function (theRequest) {" isComment="true">
						<outline text="return (false); //not consumed"/>
						<outline text="},"/>
						</outline>
					<outline text="http404Callback: function (theRequest) { //1/24/21 by DW" isComment="true">
						<outline text="return (false); //not consumed"/>
						<outline text="},"/>
						</outline>
					<outline text="blockedAddresses: new Array (), //4/17/18 by DW" isComment="true"/>
					<outline text="cacheFolder: &quot;data/cache/&quot;, //3/11/21 by DW" isComment="true" created="Mon, 08 Mar 2021 21:11:49 GMT"/>
					<outline text="flUseCache: true, //3/11/21 by DW" isComment="true" created="Thu, 11 Mar 2021 17:44:13 GMT"/>
					<outline text="flServerEnabled: true,//5/2/21 by DW" isComment="true" created="Sun, 02 May 2021 13:43:47 GMT"/>
					<outline text="flRemoveLineBreaksInOPML: true, //7/24/21 by DW" isComment="true" created="Sat, 24 Jul 2021 13:31:14 GMT"/>
					<outline text="dataFolder: &quot;data/&quot;, //7/24/21 by DW" isComment="true" created="Mon, 08 Mar 2021 21:11:49 GMT"/>
					<outline text="userLogonCallback: function (options) { //8/14/22 by DW" isComment="true" created="Sun, 14 Aug 2022 21:58:58 GMT">
						<outline text="}" created="Sun, 14 Aug 2022 21:59:09 GMT"/>
						</outline>
					<outline text="};"/>
					</outline>
				<outline text="" created="Sun, 27 Nov 2022 12:32:18 GMT"/>
				<outline text="const fnameConfig = &quot;config.json&quot;;" created="Sun, 27 Nov 2022 12:32:18 GMT"/>
				<outline text="" created="Sun, 27 Nov 2022 12:32:26 GMT"/>
				<outline text="" created="Wed, 16 Nov 2022 17:18:15 GMT"/>
				<outline text="function readConfig (callback) {" created="Wed, 16 Nov 2022 15:42:09 GMT">
					<outline text="fs.readFile (fnameConfig, function (err, jsontext) {" created="Wed, 16 Nov 2022 15:42:34 GMT">
						<outline text="if (!err) {" created="Wed, 16 Nov 2022 15:42:51 GMT">
							<outline text="var jstruct;" created="Wed, 16 Nov 2022 15:42:50 GMT"/>
							<outline text="try {" created="Wed, 16 Nov 2022 15:43:21 GMT">
								<outline text="jstruct = JSON.parse (jsontext);" created="Wed, 16 Nov 2022 15:43:57 GMT"/>
								<outline text="for (var x in jstruct) {" created="Wed, 16 Nov 2022 15:44:48 GMT">
									<outline text="config [x] = jstruct [x];" created="Wed, 16 Nov 2022 15:44:54 GMT"/>
									<outline text="}" created="Wed, 16 Nov 2022 15:45:01 GMT"/>
									</outline>
								<outline text="}" created="Wed, 16 Nov 2022 15:43:26 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Wed, 16 Nov 2022 15:43:26 GMT">
								<outline text="console.log (&quot;readConfig: err.message == &quot; + utils.jsonStringify (err.message));" created="Wed, 16 Nov 2022 15:43:30 GMT"/>
								<outline text="}" created="Wed, 16 Nov 2022 15:43:43 GMT"/>
								</outline>
							<outline text="}" created="Wed, 16 Nov 2022 15:42:55 GMT"/>
							</outline>
						<outline text="callback ();" created="Wed, 16 Nov 2022 15:49:59 GMT"/>
						<outline text="});" created="Wed, 16 Nov 2022 15:42:44 GMT"/>
						</outline>
					<outline text="}" created="Wed, 16 Nov 2022 15:42:33 GMT"/>
					</outline>
				<outline text="function httpRequest (url, method=&quot;GET&quot;, callback) {">
					<outline text="var theRequest = {">
						<outline text="method,"/>
						<outline text="url"/>
						<outline text="};"/>
						</outline>
					<outline text="request (theRequest, function (err, response, data) {">
						<outline text="if (err) {" created="Sun, 08 Aug 2021 15:33:13 GMT">
							<outline text="callback (err);" created="Sun, 08 Aug 2021 15:33:17 GMT"/>
							<outline text="}" created="Sun, 08 Aug 2021 15:33:20 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 08 Aug 2021 15:33:21 GMT">
							<outline text="var code = response.statusCode;" created="Tue, 04 Jan 2022 22:39:15 GMT"/>
							<outline text="if ((code &lt; 200) || (code &gt; 299)) {" created="Sun, 08 Aug 2021 15:33:23 GMT">
								<outline text="const message = &quot;The request returned a status code of &quot; + response.statusCode + &quot;.&quot;;" created="Sun, 08 Aug 2021 15:34:06 GMT"/>
								<outline text="callback ({message});" created="Sun, 08 Aug 2021 15:34:43 GMT"/>
								<outline text="}" created="Sun, 08 Aug 2021 15:33:28 GMT"/>
								</outline>
							<outline text="else {" created="Sun, 08 Aug 2021 15:33:29 GMT">
								<outline text="callback (undefined, data) "/>
								<outline text="}" created="Sun, 08 Aug 2021 15:33:31 GMT"/>
								</outline>
							<outline text="}" created="Sun, 08 Aug 2021 15:33:33 GMT"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function buildParamList (paramtable, flPrivate=false) { //8/4/21 by DW" created="Sat, 09 Aug 2014 15:39:08 GMT" pgfnum="43181">
					<outline text="Changes" isComment="true" created="Wed, 04 Aug 2021 14:47:01 GMT">
						<outline text="8/4/21; 10:47:04 AM by DW" created="Wed, 04 Aug 2021 14:47:03 GMT">
							<outline text="Copied twBuildParamList. If an element of params is undefined, don't include it. We were encoding it as a string, &quot;undefined&quot; and all of a sudden on the other side, in davetwitter, it was calling it an error. It is pretty errorish, but why it started now, that's a mystery." created="Wed, 04 Aug 2021 14:47:04 GMT"/>
							</outline>
						</outline>
					<outline text="var s = &quot;&quot;;" created="Sat, 09 Aug 2014 15:39:47 GMT" pgfnum="43188"/>
					<outline text="if (paramtable === undefined) { //11/21/22 by DW" created="Mon, 21 Nov 2022 13:47:06 GMT">
						<outline text="paramtable = new Object ();" created="Mon, 21 Nov 2022 13:47:13 GMT"/>
						<outline text="}" created="Mon, 21 Nov 2022 13:47:13 GMT"/>
						</outline>
					<outline text="if (flPrivate) {" isComment="true" created="Sat, 09 Aug 2014 20:17:16 GMT" pgfnum="43185">
						<outline text="paramtable.flprivate = &quot;true&quot;;" created="Sat, 09 Aug 2014 15:43:48 GMT" pgfnum="43208"/>
						<outline text="}" created="Sat, 09 Aug 2014 20:17:19 GMT" pgfnum="43186"/>
						</outline>
					<outline text="for (var x in paramtable) {" created="Sat, 09 Aug 2014 15:39:38 GMT" pgfnum="43186">
						<outline text="if (paramtable [x] !== undefined) { //8/4/21 by DW" created="Wed, 04 Aug 2021 14:48:52 GMT">
							<outline text="if (s.length &gt; 0) {" created="Sat, 09 Aug 2014 15:40:02 GMT" pgfnum="43189">
								<outline text="s += &quot;&amp;&quot;;" created="Sat, 09 Aug 2014 15:40:08 GMT" pgfnum="43190"/>
								<outline text="}" created="Sat, 09 Aug 2014 15:40:14 GMT" pgfnum="43191"/>
								</outline>
							<outline text="s += x + &quot;=&quot; + encodeURIComponent (paramtable [x]);" created="Sat, 09 Aug 2014 15:40:19 GMT" pgfnum="43192"/>
							<outline text="s += x + &quot;=&quot; + paramtable [x];" isComment="true" created="Sat, 09 Aug 2014 15:40:19 GMT" pgfnum="43192"/>
							<outline text="}" created="Wed, 04 Aug 2021 14:49:01 GMT"/>
							</outline>
						<outline text="}" created="Sat, 09 Aug 2014 15:39:43 GMT" pgfnum="43187"/>
						</outline>
					<outline text="return (s);" created="Sat, 09 Aug 2014 15:40:54 GMT" pgfnum="43193"/>
					<outline text="}" created="Sat, 09 Aug 2014 15:39:35 GMT" pgfnum="43185"/>
					</outline>
				<outline text="" created="Wed, 23 Nov 2022 14:56:27 GMT"/>
				<outline text="function getAppInfo (clientKey, callback) {" created="Wed, 23 Nov 2022 14:56:29 GMT">
					<outline text="Changes" isComment="true" created="Sun, 27 Nov 2022 12:31:29 GMT">
						<outline text="11/27/22; 7:31:32 AM by DW" created="Sun, 27 Nov 2022 12:31:30 GMT">
							<outline text="Read config.json every time so we don't have to reboot the app to change/edit an app spec." created="Sun, 27 Nov 2022 12:31:32 GMT"/>
							</outline>
						</outline>
					<outline text="readConfig (function () {" created="Sun, 27 Nov 2022 12:33:45 GMT">
						<outline text="var info = undefined;" created="Wed, 23 Nov 2022 14:57:34 GMT"/>
						<outline text="config.apps.forEach (function (item) {" created="Wed, 23 Nov 2022 14:56:49 GMT">
							<outline text="if (item.clientKey == clientKey) {" created="Wed, 23 Nov 2022 14:57:02 GMT">
								<outline text="info = item;" created="Wed, 23 Nov 2022 14:57:14 GMT"/>
								<outline text="}" created="Wed, 23 Nov 2022 14:57:10 GMT"/>
								</outline>
							<outline text="});" created="Wed, 23 Nov 2022 14:56:57 GMT"/>
							</outline>
						<outline text="if (info === undefined) {" created="Wed, 23 Nov 2022 15:36:18 GMT">
							<outline text="const message = &quot;Can't get info about the server because there is no server with the key.&quot;;" created="Wed, 23 Nov 2022 14:58:29 GMT"/>
							<outline text="callback ({message});" created="Wed, 23 Nov 2022 14:58:08 GMT"/>
							<outline text="}" created="Wed, 23 Nov 2022 15:36:26 GMT"/>
							</outline>
						<outline text="else {" created="Wed, 23 Nov 2022 15:36:26 GMT">
							<outline text="callback (undefined, info);" created="Wed, 23 Nov 2022 15:36:56 GMT"/>
							<outline text="}" created="Wed, 23 Nov 2022 15:36:29 GMT"/>
							</outline>
						<outline text="});" created="Sun, 27 Nov 2022 12:34:01 GMT"/>
						</outline>
					<outline text="}" created="Wed, 23 Nov 2022 14:56:37 GMT"/>
					</outline>
				<outline text="" created="Wed, 23 Nov 2022 14:56:29 GMT"/>
				<outline text="function getUrlForAuthorize (clientKey, urlRedirect, callback) {" created="Thu, 17 Nov 2022 13:10:05 GMT">
					<outline text="Changes" isComment="true" created="Fri, 18 Nov 2022 14:33:59 GMT">
						<outline text="11/23/22; 4:30:08 PM by DW" created="Wed, 23 Nov 2022 21:30:07 GMT">
							<outline text="We have to append the scope separately because if it is encoded by buildParamList, it won't be recognized by the server. " created="Wed, 23 Nov 2022 21:30:09 GMT"/>
							</outline>
						<outline text="11/18/22; 9:34:03 AM by DW" created="Fri, 18 Nov 2022 14:34:02 GMT">
							<outline text="Construct a URL to redirect to, to get the authorization token for the user. " created="Fri, 18 Nov 2022 14:34:04 GMT"/>
							<outline text="Here's an example of a URL we construct --" created="Fri, 18 Nov 2022 14:35:04 GMT">
								<outline text="https://social.scottfr.ee/oauth/authorize?client_id=1Z-8Zf2vOuGnmXY8w8YPwjAtSGuKwmSNxGqy_b2IEk8&amp;redirect_uri=http://social.rss.land:1401/callbackFromMastodon&amp;response_type=code&amp;scope=read+write+follow" created="Fri, 18 Nov 2022 14:35:14 GMT"/>
								</outline>
							</outline>
						</outline>
					<outline text="const path = &quot;oauth/authorize&quot;;" created="Thu, 17 Nov 2022 13:27:16 GMT"/>
					<outline text="getAppInfo (clientKey, function (err, appInfo) {" created="Wed, 23 Nov 2022 15:39:11 GMT">
						<outline text="if (err) {" created="Wed, 23 Nov 2022 15:37:57 GMT">
							<outline text="console.log (&quot;\ngetUrlForAuthorize: err.message == &quot; + err.message + &quot;, clientKey == &quot; + clientKey + &quot;\n&quot;);" created="Thu, 17 Nov 2022 20:07:23 GMT"/>
							<outline text="callback (err);" created="Wed, 23 Nov 2022 15:37:59 GMT"/>
							<outline text="}" created="Wed, 23 Nov 2022 15:38:04 GMT"/>
							</outline>
						<outline text="else {" created="Wed, 23 Nov 2022 15:40:49 GMT">
							<outline text="const params = {" created="Thu, 17 Nov 2022 13:12:20 GMT">
								<outline text="client_id: clientKey," created="Thu, 17 Nov 2022 13:12:44 GMT"/>
								<outline text="redirect_uri: urlRedirect," created="Thu, 17 Nov 2022 13:12:54 GMT"/>
								<outline text="response_type: &quot;code&quot;," created="Thu, 17 Nov 2022 13:12:33 GMT"/>
								<outline text="scope: appInfo.scopes," isComment="true" created="Thu, 17 Nov 2022 13:13:05 GMT"/>
								<outline text="force_login: true" created="Sat, 19 Nov 2022 13:21:31 GMT"/>
								<outline text="};" created="Thu, 17 Nov 2022 13:12:26 GMT"/>
								</outline>
							<outline text="const myScope = &quot;write&quot;; //11/23/22 by DW" isComment="true" created="Wed, 23 Nov 2022 21:29:29 GMT"/>
							<outline text="const paramlist = buildParamList (params, false) + &quot;&amp;scope=&quot; + appInfo.scopes;" created="Wed, 23 Nov 2022 21:28:20 GMT"/>
							<outline text="const url = appInfo.urlMastodonServer + path + &quot;?&quot; + paramlist;" created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215"/>
							<outline text="console.log (&quot;\ngetUrlForAuthorize: url == &quot; + url + &quot;\n&quot;);" created="Thu, 17 Nov 2022 20:07:23 GMT"/>
							<outline text="callback (undefined, url);" created="Thu, 17 Nov 2022 20:01:03 GMT"/>
							<outline text="}" created="Wed, 23 Nov 2022 15:40:51 GMT"/>
							</outline>
						<outline text="});" created="Wed, 23 Nov 2022 15:39:14 GMT"/>
						</outline>
					<outline text="}" created="Thu, 17 Nov 2022 13:10:54 GMT"/>
					</outline>
				<outline text="" created="Wed, 23 Nov 2022 14:56:29 GMT"/>
				<outline text="function getAccessToken (codeFromMasto, clientKey, callback) {" created="Fri, 18 Nov 2022 14:37:36 GMT">
					<outline text="Changes" isComment="true" created="Fri, 18 Nov 2022 14:51:46 GMT">
						<outline text="11/18/22; 11:30:46 AM by DW" created="Fri, 18 Nov 2022 16:30:45 GMT">
							<outline text="https://social.scottfr.ee/oauth/token?grant_type=authorization_code&amp;client_id=1Z-8Zf2vOuGnmXY8w8YPwjAtSGuKwmSNxGqy_b2IEk8&amp;client_secret=P50ZkcRARuAyChWzsnWF-Ld5QnM0kKeS15pbP7Tan2o&amp;redirect_uri=http://scripting.com/&amp;scope=read+write+follow&amp;code=FbXSOVPpq9eWqDkm5paZzu4KFkqVvLX_3vbj9XolpuA" isComment="true" created="Fri, 18 Nov 2022 14:51:46 GMT"/>
							<outline text="https://social.scottfr.ee/oauth/authorize?client_id=1M774u77Xj2DMvbSY-PJ1krRVSFcKFN65CZmqp5SEFU&amp;redirect_uri=https%3A%2F%2Fmammudeck.com%2F&amp;response_type=code&amp;scope=write%20read%20follow%20push" isComment="true"/>
							<outline text="&quot;{&quot;error&quot;:&quot;invalid_grant&quot;,&quot;error_description&quot;:&quot;The provided authorization grant is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client.&quot;}&quot;" isComment="true"/>
							</outline>
						</outline>
					<outline text="const path = &quot;oauth/token&quot;;" created="Thu, 17 Nov 2022 13:27:16 GMT"/>
					<outline text="getAppInfo (clientKey, function (err, appInfo) {" created="Wed, 23 Nov 2022 15:37:20 GMT">
						<outline text="if (err) {" created="Wed, 23 Nov 2022 15:37:57 GMT">
							<outline text="callback (err);" created="Wed, 23 Nov 2022 15:37:59 GMT"/>
							<outline text="}" created="Wed, 23 Nov 2022 15:38:04 GMT"/>
							</outline>
						<outline text="else {" created="Wed, 23 Nov 2022 15:38:04 GMT">
							<outline text="const params = {" created="Thu, 17 Nov 2022 13:12:20 GMT">
								<outline text="grant_type: &quot;authorization_code&quot;, " created="Fri, 18 Nov 2022 14:38:33 GMT"/>
								<outline text="client_id: appInfo.clientKey," created="Thu, 17 Nov 2022 13:12:44 GMT"/>
								<outline text="client_secret: appInfo.clientSecret," created="Fri, 18 Nov 2022 14:39:14 GMT"/>
								<outline text="redirect_uri: appInfo.urlRedirect," created="Fri, 18 Nov 2022 14:39:15 GMT"/>
								<outline text="scope: appInfo.scopes," isComment="true" created="Thu, 17 Nov 2022 13:13:05 GMT"/>
								<outline text="code: codeFromMasto" created="Fri, 18 Nov 2022 14:39:59 GMT"/>
								<outline text="};" created="Thu, 17 Nov 2022 13:12:26 GMT"/>
								</outline>
							<outline text="const url = appInfo.urlMastodonServer + path + &quot;?&quot; + buildParamList (params, false) + &quot;&amp;scope=&quot; + appInfo.scopes;" created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215"/>
							<outline text="console.log (&quot;getAccessToken: url == &quot; + url);" created="Thu, 17 Nov 2022 20:07:23 GMT"/>
							<outline text="httpRequest (url, &quot;POST&quot;, function (err, jsontext) {" created="Thu, 17 Nov 2022 20:01:03 GMT">
								<outline text="if (err) {" created="Fri, 18 Nov 2022 14:45:46 GMT">
									<outline text="callback (err);" created="Fri, 18 Nov 2022 14:46:02 GMT"/>
									<outline text="}" created="Fri, 18 Nov 2022 14:45:52 GMT"/>
									</outline>
								<outline text="else {" created="Fri, 18 Nov 2022 14:45:52 GMT">
									<outline text="try {" created="Fri, 18 Nov 2022 16:31:24 GMT">
										<outline text="var jstruct = JSON.parse (jsontext);" created="Fri, 18 Nov 2022 16:31:38 GMT"/>
										<outline text="callback (undefined, jstruct);" created="Fri, 18 Nov 2022 16:31:48 GMT"/>
										<outline text="}" created="Fri, 18 Nov 2022 16:31:28 GMT"/>
										</outline>
									<outline text="catch (err) {" created="Fri, 18 Nov 2022 16:31:29 GMT">
										<outline text="callback (err);" created="Fri, 18 Nov 2022 14:46:02 GMT"/>
										<outline text="}" created="Fri, 18 Nov 2022 16:31:33 GMT"/>
										</outline>
									<outline text="}" created="Fri, 18 Nov 2022 14:45:55 GMT"/>
									</outline>
								<outline text="});" created="Fri, 18 Nov 2022 14:45:41 GMT"/>
								</outline>
							<outline text="}" created="Wed, 23 Nov 2022 15:38:07 GMT"/>
							</outline>
						<outline text="});" created="Wed, 23 Nov 2022 15:37:39 GMT"/>
						</outline>
					<outline text="}" created="Fri, 18 Nov 2022 14:37:45 GMT"/>
					</outline>
				<outline text="" created="Mon, 21 Nov 2022 12:36:02 GMT"/>
				<outline text="function mastocall (path, params, accessToken, clientKey, callback) {" created="Mon, 21 Nov 2022 13:37:24 GMT">
					<outline text="getAppInfo (clientKey, function (err, appInfo) {" created="Wed, 23 Nov 2022 15:53:31 GMT">
						<outline text="if (err) {" created="Wed, 23 Nov 2022 15:53:42 GMT">
							<outline text="callback (err);" created="Wed, 23 Nov 2022 15:53:44 GMT"/>
							<outline text="}" created="Wed, 23 Nov 2022 15:53:48 GMT"/>
							</outline>
						<outline text="else {" created="Wed, 23 Nov 2022 15:53:49 GMT">
							<outline text="var headers = undefined;" created="Mon, 21 Nov 2022 13:41:57 GMT"/>
							<outline text="if (accessToken !== undefined) {" created="Mon, 21 Nov 2022 13:42:22 GMT">
								<outline text="headers = {">
									<outline text="Authorization: &quot;Bearer &quot; + accessToken"/>
									<outline text="};"/>
									</outline>
								<outline text="}" created="Mon, 21 Nov 2022 13:42:32 GMT"/>
								</outline>
							<outline text="const theRequest = {">
								<outline text="url: appInfo.urlMastodonServer + path + &quot;?&quot; + buildParamList (params),"/>
								<outline text="method: &quot;GET&quot;,"/>
								<outline text="headers,"/>
								<outline text="};"/>
								</outline>
							<outline text="request (theRequest, function (err, response, data) {">
								<outline text="function sendBackError (defaultMessage) {" created="Sat, 26 Nov 2022 17:10:38 GMT">
									<outline text="var flcalledback = false;" created="Sat, 26 Nov 2022 17:11:24 GMT"/>
									<outline text="if (data !== undefined) {" created="Sat, 26 Nov 2022 17:11:24 GMT">
										<outline text="try {" created="Sat, 26 Nov 2022 17:11:37 GMT">
											<outline text="jstruct = JSON.parse (data);" created="Sat, 26 Nov 2022 17:11:46 GMT"/>
											<outline text="if (jstruct.error !== undefined) {" created="Sat, 26 Nov 2022 17:11:56 GMT">
												<outline text="callback ({message: jstruct.error});" created="Sat, 26 Nov 2022 17:12:31 GMT"/>
												<outline text="flcalledback = true;" created="Sat, 26 Nov 2022 17:12:58 GMT"/>
												<outline text="}" created="Sat, 26 Nov 2022 17:12:25 GMT"/>
												</outline>
											<outline text="}" created="Sat, 26 Nov 2022 17:11:38 GMT"/>
											</outline>
										<outline text="catch (err) {" created="Sat, 26 Nov 2022 17:11:39 GMT">
											<outline text="}" created="Sat, 26 Nov 2022 17:11:43 GMT"/>
											</outline>
										<outline text="}" created="Sat, 26 Nov 2022 17:11:31 GMT"/>
										<outline text="" created="Sat, 26 Nov 2022 17:11:32 GMT"/>
										</outline>
									<outline text="if (!flcalledback) {" created="Sat, 26 Nov 2022 17:11:24 GMT">
										<outline text="callback ({message: defaultMessage});" created="Sat, 26 Nov 2022 17:14:05 GMT"/>
										<outline text="}" created="Sat, 26 Nov 2022 17:13:24 GMT"/>
										</outline>
									<outline text="}" created="Sat, 26 Nov 2022 17:10:46 GMT"/>
									</outline>
								<outline text="if (err) {" created="Sun, 08 Aug 2021 15:33:13 GMT">
									<outline text="sendBackError (err.message);" created="Sun, 08 Aug 2021 15:33:17 GMT"/>
									<outline text="}" created="Sun, 08 Aug 2021 15:33:20 GMT"/>
									</outline>
								<outline text="else {" created="Sun, 08 Aug 2021 15:33:21 GMT">
									<outline text="var code = response.statusCode;" created="Tue, 04 Jan 2022 22:39:15 GMT"/>
									<outline text="if ((code &lt; 200) || (code &gt; 299)) {" created="Sun, 08 Aug 2021 15:33:23 GMT">
										<outline text="const message = &quot;The request returned a status code of &quot; + response.statusCode + &quot;.&quot;;" created="Sun, 08 Aug 2021 15:34:06 GMT"/>
										<outline text="sendBackError (message);" created="Sun, 08 Aug 2021 15:34:43 GMT"/>
										<outline text="}" created="Sun, 08 Aug 2021 15:33:28 GMT"/>
										</outline>
									<outline text="else {" created="Sun, 08 Aug 2021 15:33:29 GMT">
										<outline text="callback (undefined, data) "/>
										<outline text="}" created="Sun, 08 Aug 2021 15:33:31 GMT"/>
										</outline>
									<outline text="}" created="Sun, 08 Aug 2021 15:33:33 GMT"/>
									</outline>
								<outline text="});"/>
								</outline>
							<outline text="}" created="Wed, 23 Nov 2022 15:53:51 GMT"/>
							</outline>
						<outline text="});" created="Wed, 23 Nov 2022 15:53:32 GMT"/>
						</outline>
					<outline text="}" created="Mon, 21 Nov 2022 13:39:58 GMT"/>
					</outline>
				<outline text="function mastopost (path, params, accessToken, clientKey, filedata, callback) {" created="Mon, 21 Nov 2022 12:36:03 GMT">
					<outline text="Changes" isComment="true" created="Mon, 21 Nov 2022 12:40:54 GMT">
						<outline text="11/21/22; 7:40:57 AM by DW" created="Mon, 21 Nov 2022 12:40:56 GMT">
							<outline text="Created. " created="Mon, 21 Nov 2022 12:40:57 GMT"/>
							</outline>
						</outline>
					<outline text="getAppInfo (clientKey, function (err, appInfo) {" created="Wed, 23 Nov 2022 15:49:10 GMT">
						<outline text="if (err) {" created="Wed, 23 Nov 2022 15:50:21 GMT">
							<outline text="callback (err);" created="Wed, 23 Nov 2022 15:50:24 GMT"/>
							<outline text="}" created="Wed, 23 Nov 2022 15:50:27 GMT"/>
							</outline>
						<outline text="else {" created="Wed, 23 Nov 2022 15:50:27 GMT">
							<outline text="const theRequest = {">
								<outline text="url: appInfo.urlMastodonServer + path + &quot;?&quot; + buildParamList (params),"/>
								<outline text="method: &quot;POST&quot;,"/>
								<outline text="headers: {">
									<outline text="Authorization: &quot;Bearer &quot; + accessToken"/>
									<outline text="},"/>
									</outline>
								<outline text="body: filedata" created="Sun, 20 Nov 2022 22:11:40 GMT"/>
								<outline text="};"/>
								</outline>
							<outline text="console.log (&quot;mastopost: theRequest == &quot; + utils.jsonStringify (theRequest));" created="Wed, 23 Nov 2022 20:58:23 GMT"/>
							<outline text="request (theRequest, function (err, response, data) {">
								<outline text="if (err) {" created="Sun, 08 Aug 2021 15:33:13 GMT">
									<outline text="console.log (&quot;mastopost: err.message == &quot; + err.message);" created="Wed, 23 Nov 2022 20:58:23 GMT"/>
									<outline text="callback (err);" created="Sun, 08 Aug 2021 15:33:17 GMT"/>
									<outline text="}" created="Sun, 08 Aug 2021 15:33:20 GMT"/>
									</outline>
								<outline text="else {" created="Sun, 08 Aug 2021 15:33:21 GMT">
									<outline text="var code = response.statusCode;" created="Tue, 04 Jan 2022 22:39:15 GMT"/>
									<outline text="console.log (&quot;mastopost: response.statusCode == &quot; + response.statusCode);" created="Wed, 23 Nov 2022 20:58:23 GMT"/>
									<outline text="if ((code &lt; 200) || (code &gt; 299)) {" created="Sun, 08 Aug 2021 15:33:23 GMT">
										<outline text="const message = &quot;The request returned a status code of &quot; + response.statusCode + &quot;.&quot;;" created="Sun, 08 Aug 2021 15:34:06 GMT"/>
										<outline text="callback ({message});" created="Sun, 08 Aug 2021 15:34:43 GMT"/>
										<outline text="}" created="Sun, 08 Aug 2021 15:33:28 GMT"/>
										</outline>
									<outline text="else {" created="Sun, 08 Aug 2021 15:33:29 GMT">
										<outline text="callback (undefined, data) "/>
										<outline text="}" created="Sun, 08 Aug 2021 15:33:31 GMT"/>
										</outline>
									<outline text="}" created="Sun, 08 Aug 2021 15:33:33 GMT"/>
									</outline>
								<outline text="});"/>
								</outline>
							<outline text="}" created="Wed, 23 Nov 2022 15:50:29 GMT"/>
							</outline>
						<outline text="});" created="Wed, 23 Nov 2022 15:49:11 GMT"/>
						</outline>
					<outline text="}" created="Mon, 21 Nov 2022 12:36:39 GMT"/>
					</outline>
				<outline text="" created="Sun, 20 Nov 2022 22:02:32 GMT"/>
				<outline text="function tootStatus (accessToken, clientKey, statusText, inReplyTo, callback) {" created="Sun, 20 Nov 2022 22:02:32 GMT">
					<outline text="const params = {" created="Mon, 21 Nov 2022 14:39:03 GMT">
						<outline text="status: statusText," created="Mon, 21 Nov 2022 14:39:18 GMT"/>
						<outline text="in_reply_to_id: inReplyTo" created="Mon, 21 Nov 2022 14:39:20 GMT"/>
						<outline text="};" created="Mon, 21 Nov 2022 14:39:09 GMT"/>
						</outline>
					<outline text="console.log (&quot;tootStatus: statusText == &quot; + statusText + &quot;, inReplyTo == &quot; + inReplyTo);" created="Mon, 21 Nov 2022 14:44:46 GMT"/>
					<outline text="mastopost (&quot;api/v1/statuses&quot;, params, accessToken, clientKey, undefined, callback);" created="Mon, 21 Nov 2022 12:45:43 GMT"/>
					<outline text="}" created="Sun, 20 Nov 2022 22:02:56 GMT"/>
					</outline>
				<outline text="function getUserInfo (accessToken, clientKey, callback) {" created="Mon, 21 Nov 2022 13:38:24 GMT">
					<outline text="mastocall (&quot;api/v1/accounts/verify_credentials&quot;, undefined, accessToken, clientKey, callback);" created="Mon, 21 Nov 2022 13:44:47 GMT"/>
					<outline text="}" created="Mon, 21 Nov 2022 13:38:32 GMT"/>
					</outline>
				<outline text="" created="Fri, 25 Nov 2022 14:25:27 GMT"/>
				<outline text="" created="Fri, 25 Nov 2022 14:50:00 GMT"/>
				<outline text="function addUserAgent (headers) {" created="Fri, 25 Nov 2022 14:50:00 GMT">
					<outline text="headers [&quot;User-Agent&quot;] = myProductName + &quot; v&quot; + myVersion;" created="Fri, 25 Nov 2022 14:50:09 GMT"/>
					<outline text="}" created="Fri, 25 Nov 2022 14:50:09 GMT"/>
					</outline>
				<outline text="" created="Fri, 25 Nov 2022 14:50:00 GMT"/>
				<outline text="function createAppOnServer (urlServer, callback) { //11/25/22 by DW" isComment="true" created="Fri, 25 Nov 2022 14:25:27 GMT">
					<outline text="Changes" isComment="true" created="Fri, 25 Nov 2022 14:26:17 GMT">
						<outline text="11/25/22; 9:26:24 AM by DW" created="Fri, 25 Nov 2022 14:26:23 GMT">
							<outline text="curl -X POST \">
								<outline text="-F 'client_name=Test Application' \"/>
								<outline text="-F 'redirect_uris=urn:ietf:wg:oauth:2.0:oob' \"/>
								<outline text="-F 'scopes=read write follow push' \"/>
								<outline text="-F 'website=https://myapp.example' \"/>
								<outline text="https://mastodon.example/api/v1/apps"/>
								</outline>
							</outline>
						</outline>
					<outline text="const app = config.apps [0];" created="Fri, 25 Nov 2022 14:46:43 GMT"/>
					<outline text="var params = app;" created="Fri, 25 Nov 2022 14:27:01 GMT"/>
					<outline text="delete params.scopes; //can't pass the scopes through buildParamList because it will encode the + signs" created="Fri, 25 Nov 2022 14:45:25 GMT"/>
					<outline text="const paramlist = buildParamList (params) + &quot;&amp;scopes=&quot; + app.scopes; " created="Fri, 25 Nov 2022 14:46:11 GMT"/>
					<outline text="" created="Fri, 25 Nov 2022 14:46:11 GMT"/>
					<outline text="var headers = new (Object);" created="Fri, 25 Nov 2022 14:46:11 GMT"/>
					<outline text="addUserAgent (headers);" created="Fri, 25 Nov 2022 14:51:48 GMT"/>
					<outline text="" created="Fri, 25 Nov 2022 14:46:11 GMT"/>
					<outline text="const theRequest = {">
						<outline text="url: urlServer + &quot;api/v1/apps&quot; + &quot;?&quot; + paramlist,"/>
						<outline text="method: &quot;POST&quot;,"/>
						<outline text="headers,"/>
						<outline text="body: undefined" created="Sun, 20 Nov 2022 22:11:40 GMT"/>
						<outline text="};"/>
						</outline>
					<outline text="console.log (&quot;createAppOnServer: theRequest == &quot; + utils.jsonStringify (theRequest));" created="Wed, 23 Nov 2022 20:58:23 GMT"/>
					<outline text="request (theRequest, function (err, response, data) {">
						<outline text="if (err) {" created="Sun, 08 Aug 2021 15:33:13 GMT">
							<outline text="console.log (&quot;createAppOnServer: err.message == &quot; + err.message);" created="Wed, 23 Nov 2022 20:58:23 GMT"/>
							<outline text="callback (err);" created="Sun, 08 Aug 2021 15:33:17 GMT"/>
							<outline text="}" created="Sun, 08 Aug 2021 15:33:20 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 08 Aug 2021 15:33:21 GMT">
							<outline text="var code = response.statusCode;" created="Tue, 04 Jan 2022 22:39:15 GMT"/>
							<outline text="console.log (&quot;createAppOnServer: response.statusCode == &quot; + response.statusCode);" created="Wed, 23 Nov 2022 20:58:23 GMT"/>
							<outline text="if ((code &lt; 200) || (code &gt; 299)) {" created="Sun, 08 Aug 2021 15:33:23 GMT">
								<outline text="const message = &quot;The request returned a status code of &quot; + response.statusCode + &quot;.&quot;;" created="Sun, 08 Aug 2021 15:34:06 GMT"/>
								<outline text="callback ({message});" created="Sun, 08 Aug 2021 15:34:43 GMT"/>
								<outline text="}" created="Sun, 08 Aug 2021 15:33:28 GMT"/>
								</outline>
							<outline text="else {" created="Sun, 08 Aug 2021 15:33:29 GMT">
								<outline text="callback (undefined, data) "/>
								<outline text="}" created="Sun, 08 Aug 2021 15:33:31 GMT"/>
								</outline>
							<outline text="}" created="Sun, 08 Aug 2021 15:33:33 GMT"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Fri, 25 Nov 2022 14:25:41 GMT"/>
					</outline>
				<outline text="" created="Wed, 16 Nov 2022 14:30:31 GMT"/>
				<outline text="function handleHttpRequest (theRequest) {">
					<outline text="Changes" isComment="true" created="Thu, 18 Mar 2021 21:30:01 GMT">
						<outline text="11/16/22; 9:33:27 AM by DW" created="Wed, 16 Nov 2022 14:33:27 GMT">
							<outline text="Cribbed from davetwitter." created="Wed, 16 Nov 2022 14:33:27 GMT"/>
							</outline>
						<outline text="3/18/21; 5:30:04 PM by DW" created="Thu, 18 Mar 2021 21:30:03 GMT">
							<outline text="We've made a bit of a mess around screenname parameters. " created="Thu, 18 Mar 2021 21:30:05 GMT"/>
							<outline text="I want prefer &quot;screenname&quot;, but we'll accept screen_name too." created="Thu, 18 Mar 2021 21:30:17 GMT"/>
							</outline>
						</outline>
					<outline text="var params = theRequest.params;"/>
					<outline text="const token = params.oauth_token;"/>
					<outline text="const secret = params.oauth_token_secret;"/>
					<outline text="function returnPlainText (s) {">
						<outline text="theRequest.httpReturn (200, &quot;text/plain&quot;, s.toString ());"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnHtml (htmltext) {">
						<outline text="theRequest.httpReturn (200, &quot;text/html&quot;, htmltext.toString ());"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnData (jstruct) {">
						<outline text="if (jstruct === undefined) {">
							<outline text="jstruct = {};"/>
							<outline text="}"/>
							</outline>
						<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnJsontext (jsontext) { //9/14/22 by DW">
						<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, jsontext.toString ());"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnError (jstruct) {">
						<outline text="theRequest.httpReturn (500, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnNotFound () {">
						<outline text="theRequest.httpReturn (404, &quot;text/plain&quot;, &quot;Not found.&quot;);"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnRedirect (url, code) { ">
						<outline text="var headers = {">
							<outline text="location: url"/>
							<outline text="};"/>
							</outline>
						<outline text="if (code === undefined) {">
							<outline text="code = 302;"/>
							<outline text="}"/>
							</outline>
						<outline text="theRequest.httpReturn (code, &quot;text/plain&quot;, code + &quot; REDIRECT&quot;, headers);"/>
						<outline text="}"/>
						<outline text=""/>
						</outline>
					<outline text="function httpReturn (err, returnedValue) {">
						<outline text="Changed" isComment="true" created="Wed, 14 Sep 2022 19:47:30 GMT">
							<outline text="9/14/22; 3:47:35 PM by DW" created="Wed, 14 Sep 2022 19:47:34 GMT">
								<outline text="If the returned value is an object, call returnData, but if it's something else, return it as a string. " created="Wed, 14 Sep 2022 19:47:36 GMT"/>
								<outline text="In all cases, the returned type is application/json." created="Wed, 14 Sep 2022 19:48:09 GMT"/>
								<outline text="This allows the river routines to convert the object to jsontext so it can cache that instead of an object." created="Wed, 14 Sep 2022 19:48:38 GMT"/>
								</outline>
							</outline>
						<outline text="if (err) {">
							<outline text="returnError (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="if (typeof returnedValue == &quot;object&quot;) {" created="Wed, 14 Sep 2022 19:49:36 GMT">
								<outline text="returnData (returnedValue);"/>
								<outline text="}" created="Wed, 14 Sep 2022 19:49:54 GMT"/>
								</outline>
							<outline text="else {" created="Wed, 14 Sep 2022 19:50:07 GMT">
								<outline text="returnJsontext (returnedValue); //9/14/22 by DW" created="Wed, 14 Sep 2022 19:52:50 GMT"/>
								<outline text="}" created="Wed, 14 Sep 2022 19:50:09 GMT"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="" created="Wed, 16 Nov 2022 15:36:32 GMT"/>
					<outline text="console.log (&quot;handleHttpRequest: lowerpath == &quot; + utils.jsonStringify (theRequest.lowerpath) + &quot;, params == &quot; + utils.jsonStringify (params));" isComment="true" created="Wed, 16 Nov 2022 14:33:59 GMT"/>
					<outline text="" created="Wed, 16 Nov 2022 14:35:27 GMT"/>
					<outline text="" created="Sat, 26 Nov 2022 16:41:55 GMT"/>
					<outline text="switch (theRequest.method) {" created="Thu, 01 May 2014 20:42:04 GMT" pgfnum="40803">
						<outline text="case &quot;POST&quot;:" created="Thu, 01 May 2014 20:42:39 GMT" pgfnum="40807">
							<outline text="switch (theRequest.lowerpath) {">
								<outline text="default: " created="Sun, 20 Nov 2022 21:58:29 GMT">
									<outline text="returnNotFound ();" created="Sun, 20 Nov 2022 21:58:39 GMT"/>
									<outline text="break;" created="Sun, 20 Nov 2022 21:58:45 GMT"/>
									</outline>
								<outline text="}" created="Mon, 03 Feb 2014 03:20:25 GMT" pgfnum="36830"/>
								</outline>
							</outline>
						<outline text="case &quot;GET&quot;:" created="Thu, 01 May 2014 20:42:39 GMT" pgfnum="40807">
							<outline text="switch (theRequest.lowerpath) {">
								<outline text="case &quot;/now&quot;: " created="Sat, 08 Feb 2014 16:43:58 GMT" pgfnum="37236">
									<outline text="theRequest.httpReturn (200, &quot;text/plain&quot;, new Date ());"/>
									<outline text="return;" created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/connect&quot;:" created="Thu, 17 Nov 2022 13:31:27 GMT">
									<outline text="console.log (&quot;handleHttpRequest: params.redirect_url == &quot; + params.redirect_url);" created="Sun, 20 Nov 2022 21:34:39 GMT"/>
									<outline text="getUrlForAuthorize (params.client_key, params.redirect_url, function (err, url) {" created="Wed, 23 Nov 2022 15:43:06 GMT">
										<outline text="if (err) {" created="Wed, 23 Nov 2022 15:43:41 GMT">
											<outline text="returnError (err);" created="Wed, 23 Nov 2022 15:43:44 GMT"/>
											<outline text="}" created="Wed, 23 Nov 2022 15:43:49 GMT"/>
											</outline>
										<outline text="else {" created="Wed, 23 Nov 2022 15:43:50 GMT">
											<outline text="returnRedirect (url);" created="Thu, 17 Nov 2022 20:01:47 GMT"/>
											<outline text="}" created="Wed, 23 Nov 2022 15:43:52 GMT"/>
											</outline>
										<outline text="});" created="Wed, 23 Nov 2022 15:43:34 GMT"/>
										</outline>
									<outline text="return;" created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
									</outline>
								<outline text="case &quot;/getaccesstoken&quot;: " created="Sun, 20 Nov 2022 00:38:37 GMT">
									<outline text="console.log (&quot;\n/getaccesstoken: params.code == &quot; + params.code + &quot;, params.client_key == &quot; + params.client_key);" created="Wed, 23 Nov 2022 16:38:22 GMT"/>
									<outline text="getAccessToken (params.code, params.client_key, httpReturn);" created="Fri, 18 Nov 2022 14:46:54 GMT"/>
									<outline text="return;" created="Sun, 20 Nov 2022 00:38:48 GMT"/>
									</outline>
								<outline text="" created="Sun, 20 Nov 2022 21:59:29 GMT"/>
								<outline text="case &quot;/toot&quot;: //11/20/22 by DW" created="Sun, 20 Nov 2022 21:59:30 GMT">
									<outline text="console.log (utils.jsonStringify (params));" created="Mon, 21 Nov 2022 14:46:43 GMT"/>
									<outline text="tootStatus (params.access_token, params.client_key, params.status, params.inReplyTo, httpReturn);" created="Sun, 20 Nov 2022 22:01:22 GMT"/>
									<outline text="break;" created="Sun, 20 Nov 2022 22:01:42 GMT"/>
									</outline>
								<outline text="case &quot;/getuserinfo&quot;: " created="Sun, 20 Nov 2022 21:59:30 GMT">
									<outline text="getUserInfo (params.access_token, params.client_key, httpReturn);" created="Sun, 20 Nov 2022 22:01:22 GMT"/>
									<outline text="break;" created="Sun, 20 Nov 2022 22:01:42 GMT"/>
									</outline>
								<outline text="case &quot;/uploadmedia&quot;: " isComment="true" created="Sun, 20 Nov 2022 21:59:30 GMT">
									<outline text="uploadMedia (params.access_token, httpReturn);" created="Sun, 20 Nov 2022 22:01:22 GMT"/>
									<outline text="break;" created="Sun, 20 Nov 2022 22:01:42 GMT"/>
									</outline>
								<outline text="default: " created="Sun, 20 Nov 2022 21:58:29 GMT">
									<outline text="returnNotFound ();" created="Sun, 20 Nov 2022 21:58:39 GMT"/>
									<outline text="break;" created="Sun, 20 Nov 2022 21:58:45 GMT"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="break;" created="Thu, 01 May 2014 20:42:44 GMT" pgfnum="40808"/>
							</outline>
						<outline text="}" created="Thu, 01 May 2014 20:42:10 GMT" pgfnum="40804"/>
						</outline>
					<outline text="" created="Sat, 26 Nov 2022 16:41:56 GMT"/>
					<outline text="" created="Sat, 26 Nov 2022 16:41:56 GMT"/>
					<outline text="" created="Sat, 26 Nov 2022 16:41:56 GMT"/>
					<outline text="" created="Sat, 26 Nov 2022 16:41:56 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text="" created="Wed, 16 Nov 2022 14:32:58 GMT"/>
				<outline text="const httpConfig = {">
					<outline text="port: config.httpPort,"/>
					<outline text="flLogToConsole: config.flLogToConsole,"/>
					<outline text="flAllowAccessFromAnywhere: config.flAllowAccessFromAnywhere,"/>
					<outline text="flPostEnabled: config.flPostEnabled,"/>
					<outline text="blockedAddresses: config.blockedAddresses //4/17/18 by DW"/>
					<outline text="};"/>
					</outline>
				<outline text="" created="Wed, 16 Nov 2022 15:42:08 GMT"/>
				<outline text="readConfig (function () {" created="Wed, 16 Nov 2022 15:42:09 GMT">
					<outline text="console.log (&quot;config == &quot; + utils.jsonStringify (config));" created="Wed, 16 Nov 2022 15:45:23 GMT"/>
					<outline text="davehttp.start (httpConfig, handleHttpRequest);"/>
					<outline text="});" created="Wed, 16 Nov 2022 15:42:17 GMT"/>
					</outline>
				<outline text="" created="Wed, 16 Nov 2022 15:42:09 GMT"/>
				<outline text="" created="Wed, 16 Nov 2022 15:42:09 GMT"/>
				</outline>
			<outline text="readme.md" created="Sun, 20 Nov 2022 15:02:46 GMT">
				<outline text="# mastoServer" created="Sun, 20 Nov 2022 15:02:48 GMT">
					<outline text="tbd" created="Sun, 20 Nov 2022 15:02:58 GMT"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Sun, 20 Nov 2022 14:50:48 GMT">
			<outline text="nodeEditorSuite.utilities.buildIMastoServer ()" created="Sun, 06 Nov 2022 15:51:50 GMT"/>
			</outline>
		</body>
	</opml>
